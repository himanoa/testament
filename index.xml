<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>遺言書</title><link>https://blog.himanoa.net/</link><description>Recent content on 遺言書</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 02 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.himanoa.net/index.xml" rel="self" type="application/rss+xml"/><item><title>エラーレポート</title><link>https://blog.himanoa.net/38/</link><pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/38/</guid><description>風呂に3時間入っていた。思考は何時もの長風呂タイムと同じで自分の人生の足りない物、今後理想を実現するためのロードマップと現在の状態の乖離についてまとめなおしていた。
スタックトレースを紛失してしまったので実行中の状態の詳細は不明だが特定のロジックパターンを遂行していた時に突然過呼吸が発生し、顔面が痺れていて鮮明に誰かに気づいて欲しい状態になったことを覚えている。
2-3分この状態が続いた後ふと鏡を覗いたら自分の顔が平常時の顔だったことを確認して症状を回復した。</description></item><item><title>なりました。21歳に(倒置法)</title><link>https://blog.himanoa.net/37/</link><pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/37/</guid><description>多分これ公開されるのが1/31とかなんですけど、ついに21歳になりました。今年はとても早かったですね。
変わったことは思想、価値観や自己評価です。使っているテキストエディタは変わりませんでした。
いつも通りですが非論理的な文章構造になってます。
どうでしたか去年は？(倒置法) 2017年は前半死んでて後半がんばってる感じだった気がしたんですけど、2018年は真逆だった気がする。
酒 たくさん飲んだ。主にビールが好きということがわかったというのがアドですね。あとは年相応にしてサイゼのワインを無限に飲むのが好き。
社会人ならもっと高い酒飲めよという話はあるのだが、ぶっちゃけ財布に余裕があるわけではないので許して欲しい。(突然の懺悔)
お酒を飲んでる時が人生でそれ以外の時は人生ではないというのが今年一番の知見だと思った。アルコール最高!!
コード 2017年よりは書いたと思う。GitHubの草は900前後とかだった。
まぁでも実用的なコードって全くなくて、OSSとかをガチガチでやってるって感じじゃなかった。でもブルーオーシャンな言語のライブラリを使って不便なところにPRを投げる遊びは楽しかった。
新しく学んだ言語は業務で使うためにScalaと、趣味で遊ぶためにRustを書いてた。っていうか今ではJavaScript(TypeScript)が一番書ける言語な感じがするんですけど、本格的に書き初めたのって今年っぽいですね。
各言語の感想を雑に書くとScalaはMonad的要素とパターンマッチが最高。Rustはブルーオーシャン感が最高(あんまり踏み込んで学習できてない)。TypeScriptはなんか雑に便利でよかった
名取さなさんの声を常に聞きたくてvimのpluginを書いたりしてた。あと、名取さなさんの音声を再生するDiscordBotを作ったりしてた。これは名取さなさんのガイドラインが制定された時に公開をやめた。DiscordBotを我以外の他人がホスティングし始めてしまったので。
後半はあまりコード書いてないがこれの理由は後述するんだがエンジニアの休日にコードやアウトプットがうんちゃらみたいな文化に吐き気がしたのと、そういうのを疑似強制するような人間が求めてることをやりたくなさが強くなったからです。
OSSメンテナに憧れて生きてるけど我にはきっと継続的にメンテしていく気力も自身もないよなって気持ちになってる。
ブログ 前半はよくできたね偉いってくらい書いたと思う。30はてブくらい付いた記事とかあって承認欲求の高まりを感じちゃった。でも後半は精神が荒れていたのと文化破壊欲求が加速して書かなくなった。アドベントカレンダーは本当にごめんなさい。来年からはもう登録しません
ゲーム だいたいたのしかった。でもハースストーンはマンモス年のDKとかゴミレジェが環境を破壊していて単純に不快なゲームだったのでスタン落ちしたら呼んでください。
寄稿した。合同誌に(トーチゴーレム) 楽しかったんだが一番体力を使ったが関係各位にだいぶ迷惑をかけた気がしているやつです。まじでごめんなさい
始めて有料でイラストの依頼メールとか送ったけどこれは良かった(原稿進捗や仕事が忙しくて連絡滞りや雑な対応などあって反省点はおおいが‥)し、今度はアイコンとかで依頼してみたいなぁ
仕事 2/1に書きます
VTuber 名取さなさんが好き。
見なくなったもの。見るようになったもの Twitterとはてブをあまり見なくなった。Twitterはモバイルが最悪で他人のいいねで容易に悪意が可視化されてるのが嫌だった。はてブもそう。ホットエントリーにたまに上がってくるDis系のコンテンツを見るのが嫌になってきたっていうがある。インターネットには悪意の渦が渦を巻いていることがわかる。
諸悪の根源 2018年は本当に嫌いな物や明確な悪意というのがよくわかった年だった。後半苦しかったのもそれが悪い。
全部人の中にある承認欲求が悪いんです。承認欲求消えさってくれ。俺の観測範囲に入ってくるな。おまえらはWebサービスを実装する時にいいねなんていうバカげた機能を実装するな。今すぐ滅びろ。頼む。俺のために滅びてくれ。人間。いいね合戦をやめろ。いいねを稼ぐなんて馬鹿げた目的を俺の観測範囲に入れるな。いいねを稼ぐ目的で過激をするな。やめろ。やめろ。やめろ。やめろ。やめろ。やめろ。やめろ。承認欲求はこの世に存在しちゃいけないんだ。インターネットを見てるだけで個体値厳選されてる気持ちになるのも全部こいつがいけない。
こういう事言うと「お前の生産性や評価がゴミなのを外部に擦り付けるな」とか言われそうなんですけどそういうことじゃなくて、単純にお前のそのやり方が他人の生き辛くしているからやめろといっているんですよ。
今年 まったりひっそりとなんかしていたい。なるべく外界とのアダプターを切っていきたいっていうのが正直な所なんだけど、もっといろんな人間と友達になってみたいというのもある。
これは友達の受け売りなんですけど、今のインターネットは何らかの影響ででかい存在になって走り続けなければ行けない人間と何の影響もなくてひっそりと永遠に停滞し続けるの両極端になってるっていう話があった。僕は後者なので一生停滞します。
さいごに 例のリストです http://www.amazon.co.jp/registry/wishlist/2MFXRTHKOUEYH/ref=cm_sw_r_tw</description></item><item><title>テスト記事</title><link>https://blog.himanoa.net/36/</link><pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/36/</guid><description>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</description></item><item><title>RustでEnumを文字列(文字列slice)から生成したい</title><link>https://blog.himanoa.net/35/</link><pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/35/</guid><description>Rustを書いていると自分で定義したEnumを文字列から生成したくなる時がある。コード例で示すとこんな感じ
pub enum Foo { Foo1, Foo2, Foo3, Foo4 } Foo::from_str(&amp;quot;Foo1&amp;quot;) // -&amp;gt; Foo::Foo1 こんな時は標準ライブラリに入っている、std::str::FromStr トレイトを実装してやるとうまいこといくし、他の似たような挙動をする型と一緒に扱えたりして便利で作法的にも良い。例は以下の通り
use std::str::FromStr; use std::str::FromStr; pub enum Foo { Foo1, Foo2, Foo3 } impl FromStr for Foo { type Err = &amp;amp;&#39;static str; fn from_str(s: &amp;amp;str) -&amp;gt; Result&amp;lt;Self, Self::Err&amp;gt; { match s { &amp;quot;Foo1&amp;quot; =&amp;gt; Ok(Foo::Foo1), &amp;quot;Foo2&amp;quot; =&amp;gt; Ok(Foo::Foo2), &amp;quot;Foo3&amp;quot; =&amp;gt; Ok(Foo::Foo3), _ =&amp;gt; Err(&amp;quot;Error&amp;quot;) } } } Foo::from_str(&amp;quot;Foo1&amp;quot;) // Ok(Foo::Foo1) Foo::from_str(&amp;quot;Foo1sadasd&amp;quot;) // Err(&amp;quot;Error&amp;quot;) もちろんFromStrはトレイトなのでenum以外にも適用可能なので、任意の型を文字列から生成したい時にはこの方法を使いましょう。</description></item><item><title>SPAにおけるOpen ID Connect認証</title><link>https://blog.himanoa.net/34/</link><pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/34/</guid><description>サーバーサイドとクライアントサイド両方とも実装する機運が出てきたのでそれぞれの役割を整理するためにシーケンス図を書いた。 Googleって書いてあるところはOAuthプロバイダーなら何でも置き替えられるはず
間違ってたら教えてくれ
追記: とりあえずシーケンス図が書けたのでAPIサーバーに求められている機構を実装した。curlで試しているのと、SPAのガワが存在していないため一旦セッションに入れたりstateの検証するのは省いた。
const { createHash } = require(&amp;quot;crypto&amp;quot;); const url = require(&amp;quot;url&amp;quot;); const express = require(&amp;quot;express&amp;quot;); const bp = require(&amp;quot;body-parser&amp;quot;); const axios = require(&amp;quot;axios&amp;quot;); const jwt = require(&amp;quot;jwt-simple&amp;quot;); const secret = require(&amp;quot;./secret.json&amp;quot;); const app = express(); app.use(bp.json()); const salt = &amp;quot;hakatanosalt&amp;quot;; app.get(&amp;quot;/oauth/callback&amp;quot;, (req, res) =&amp;gt; { console.log( JSON.stringify({ code: req.query.code, state: req.query.state }) ); res.send(&amp;quot;ok&amp;quot;); }); app.get(&amp;quot;/oauth/google/login&amp;quot;, function(req, res) { const state = createHash(&amp;quot;sha256&amp;quot;) .update(`${salt}${Math.random()}${+new Date()}`) .digest(&amp;quot;hex&amp;quot;); const params = new url.</description></item><item><title>RustでMarkdown to Htmlを試してみる</title><link>https://blog.himanoa.net/33/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/33/</guid><description>有給を取って、ここ最近新しい事を始められてなかったことを思い出したので前からやりたかったRustに入門をしました。 んで、まぁいつも通りブログシステムでも書いてみるかなぁとか思ってRocket触ってDBまでアクセスしてInsert流す所までは普通にできたので、とりあえず次はMarkdownをパースしてhtmlに変換するやつでも書こうかなと思ったのでやってみることに。
ライブラリを物色してみるとpulldown-cmarkというやつが人気そうなので雑にインストールして使ってみることにしました:smile:
インストール Rustの環境構築は一旦省いて、以下のコマンドでパッケージを切って依存関係にpulldown-cmarkを入れていきます。
$ cargo new --bin pulldown_cmark_playground $ cd pulldown_cmark_playground $ cat &#39;pulldown-cmark = &amp;quot;0.1.2&amp;quot;&#39; &amp;gt;&amp;gt; Cargo.toml $ cargo build cargo buildした時に依存関係にあるpulldown-cmarkが落ちてきてビルドされます。エコシステムがしっかりしていて完全に便利。文明の息吹を感じろ。
htmlに変換してみる というわけでライブラリを使う準備が整ったのでさっそくMarkdownをhtmlに変換してみる。 GitHubのREADME.mdにはサンプルコードらしき物が書いていないが、ドキュメントの方にはちゃんと書いてあるのでそちらを参照しよう。大体以下のコードになります。
extern crate pulldown_cmark; use pulldown_cmark::{html, Parser}; fn main() { let markdown_str = r#&amp;quot;# Hello 人間は愚かな生物。 [俺のブログ](https://blog.himanoa.net) &amp;quot;#; let parser = Parser::new(markdown_str); let mut html_buf = String::new(); html::push_html(&amp;amp;mut html_buf, parser); println!(&amp;quot;{}&amp;quot;, html_buf); } $ cargo run で実行してみると以下の結果が出力されます。
&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;人間は愚かな生物。&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://blog.</description></item><item><title>EFFY one of unreasonable &#34;if&#34; をクリアした</title><link>https://blog.himanoa.net/32/</link><pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/32/</guid><description>Vertical Strilke Endless Challenge を作ったサークルProject ICKX さん の第一作である所の EFFY one of unreasonable &amp;ldquo;if&amp;rdquo; をNormalでクリアしたのでそれの感想を書く。ネタバレもある。たぶん
どんなゲームかというと、フライトシューティング(エースコンバット的な)で敵をバッタバッタと撃墜していく感じ。主人公機には専用の装備とかわいい戦術A.Iがついており、専用の装備で超起動したりめっちゃ加速できたりする
ご購入はこちら！
パッケージ版
COMIC ZINhttps://t.co/WKPjxpppJF
AKIBA HOBBYhttps://t.co/wQJnz6YRzt
げっちゅ屋https://t.co/QaLL4oMm3b
※2018/8/7現在、上記以外で新品の委託先はありません
DL版https://t.co/64HnvYHuflhttps://t.co/DSjXp16BYG
メロンブックスDLhttps://t.co/fusq0riFJK
&amp;mdash; EFFY開発チーム (@effy_staffs) 2018年8月6日 ストーリー 民間軍事企業のテストパイロットをやっていたと思ったら敵が襲いかかってきたので、振りかかる火の粉を払ってたらいつの間にかに戦争になっていた。上司は無茶なミッションばっか頼んでくるしこれからわたし、どうなっちゃうのー！？みたいな感じ。主人公が男なのでこれからわたし、どうなっちゃうのー！？ではないが。
驚きのフルボイス ゲーム中のセリフがフルボイスになっていて神、難易度が高いというのもあるが、レーダーみたり機銃のレティクルみたりでセリフ追ってプレイしていられないのでフルボイスなのは嬉しい。シナリオの把握がしやすい
頻繁にキャラクターが喋ってるのでテキスト量も膨大な感じがするんだがしっかりボイスが付いててすごいと思った。
あと味方のモブが主人公ワッショイしてくれる演出もすき。オタクは自己肯定観がひくいので
機載AIのエフィーがかわいい 機体の性能が高いところに由来するのか妙に自信家なところとか、被弾しまくると落ち込んだりするところがかわいい。
セリフからドヤ顔が浮かぶ…
「わたしを使って　彼らを斃して」だとか「勝てない筈がないのです」とか、こうプレイヤーを奮起させるセリフをバシバシ言ってくのが僕的にはスコポイントでした。
エースコンバット ACE余裕じゃなんとかならない難易度 まじで難しい。エースコンバットはかなり得意なゲームなんですけどEasyでも死んだ箇所があったくらいには難しかった。Normalはやばいですね。難しいポイント攻略するのにかなり時間がかかった。敵が物量の暴力で攻めてくるのもあるんだけどエースコンバットよりも攻撃をよくするイメージがついた。全部俺が撃墜してやるぜーなんてやると一瞬で蒸発したりする。
攻略のコツとか まずは全部自分でなんとかするという気持ちを殺すことです。敵がおおいのでミサイルいっぱいあっても足りなかったりする。
味方が有能なので味方と一緒に飛ぶ事を心がける事でこの変はなんとかなったりする。あと母艦が出てくるミッションは困ったら母艦の上空をグルグル回ったりしとけば敵が勝手に死ぬ。この変はエースコンバットよりどうやって飛ぶかを考えさせられるゲームだった。</description></item><item><title>Python &#43; Firebase RealtimeDBでDiscordBotを作った感想</title><link>https://blog.himanoa.net/31/</link><pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/31/</guid><description>Vの者の配信をしてたら放送のリンクをDiscordに自動で投稿してくれる感じのDiscordBotを書きましたhttps://t.co/xKtgGYRJ7w から各位のDiscordServerに登録できます!
簡易的なDiscordBotの作り方について書いた本を本日のコミックマーケット 西め07a にて販売するので、そちらもよろしくお願いします pic.twitter.com/EmHfRv9b0g
&amp;mdash; ひまのあ??? (@h1manoa) 2018年8月9日 これの話です。
これの裏側はPython3.6 + Firebase RealtimeDB + GAE(Flexible Enviroment)になっています。
今回はRealtime Databsaeを使った感想について書いていきます
そもそもなぜReatimeDBを？ 人間がデプロイしないで自分のサーバーに追加できるDiscordBotを組みたかったので何かしらに永続化する必要がある。 RDBMSで何か遊ぶことには慣れてるので、本当はRDBMSを使いたかったのだが、無料で使える or もしくはコスパがよろしいプランが存在しなかったので、NosqlなFirebase Realtime DBを採用したみたいな経緯でした。
よかった話 安い 日のデータ通信量がわかれば月のデータ通信量もなんとなくわかるのでわかるんですが、安いのは個人のホビーとしてはポイントがたかい。 僕のユースケースだと無料枠に収まりそうなのでよかった
見えるものが動くまでのサイクルがはやい。 テーブル設計しなくても適当にDatabaseに実データが入れられたり、リアルタイム同期してくれるため動くものを作るまでのサイクルはめちゃくちゃ簡略化できる。
しんどかった話 flattenなスキーマ設計 RealtimeDBはスキーマレスだが開発を効率的にやるためにはやはりスキーマはあったほうがいいと思っているのでアプリケーションコード上でやった。 RealtimeDBはあるテーブルのデータを一覧で取得してくるとその子要素も全部取得してしまうため、データが増えてくるとpayloadは巨大化するしコストも増えていくので、flattenに設計していく必要があるのだがそうすると今度は削除や書き込み時に複数のエンドポイントを更新しないといけなくなるため、漏れが発生するとすぐに破綻するのが大変だった。
そもそもFirestoreを選定しなかった理由 まだベータ版だったのと良さげなAPIClientがなかったため今回は敬遠した。が今度試してみたいですね</description></item><item><title>Hearthstoneランク15いった</title><link>https://blog.himanoa.net/30/</link><pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/30/</guid><description>初心者を脱したのでよかったですね。
はい。初めてここまできました pic.twitter.com/p6U3VdV3Q8
&amp;mdash; ひまのあ@1日目 西め07a (@h1manoa) 2018年7月28日 滑りこめたのでよかった。月末は弱い人がおおいきがする。最高16で16~18をいったり来たりしてたんだがたまたま、奇数パラがメタと噛みあって連勝ボーナス混みで4-1(記憶ちがいあるかも)で15はいった。
今月主に回してたデッキは 奇数パラディン 奇数ローグ ミラクルローグ で途中9連敗を二回したりでマウス投げたりしてたがまぁ自己ベスト更新できてよかったですね、みたいなところ。このランク帯までは、デッキパワーたかいデッキでメタが噛みあってる時間帯にどれだけしゃぶり尽せるかみたいなところなのでデッキパワーつよいデッキを使えるかみたいなのがでかいとおもう。</description></item><item><title>ストレスコントロール</title><link>https://blog.himanoa.net/29/</link><pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/29/</guid><description>単純に苦手。
負な出来事が起こると愚直に不安にもなるしストレスが来るし何しろイライラするし機嫌もわるくなる
今日もハースで9連敗した</description></item><item><title>意図しないターゲットに対してバズった時にどこまでサポートするか</title><link>https://blog.himanoa.net/28/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/28/</guid><description>これからネタプロダクトで一発当てる(ここでの一発当てるはTwitterでRTされてチヤホヤされるの意)のを狙ってる人向けの個人の見解です。
正直求められているのはコマンド一発で立ちあがって良しなに動いてくれる物ではなくて、ブラウザからワンクリックで呼べる手段(ただこれは我々がホスティングしてインフラ費用を払わないといけない点がつらい)か誰でもわかる詳細なマニュアル(開始地点が絞れずエラーハンドリングどうする)なきがします
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 3, 2018 ぶっちゃけDiscordBotはバズることそこそこ予想できてたので公開のしかた間違ったなぁとも思っていて、ちゃんとゼロから動かせる資料の記事でも付けとくべきだったっていうのはある
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) 2018年7月3日 ただまぁそれと同時にあれできない人がDiscordBot運用するのは危険なのではという気持ちもあるので
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 3, 2018 まぁうまく人々が魅力を持って動かしたいと思ってくれるかわからん物に対して気合を入れすぎるのはあまりにもコスパがわるいので、利用者側の腕力に頼って腕力ないならやるなで蹴るっていうのはやり方として正しいと思いますけどね
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 3, 2018 無料で動作保証 + コンサルティングまでやるのは個人開発正直モチベ下ると思う
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 3, 2018 絵は他人の環境で動くかどうかの冪等性まで考えなくていいよなって思ったけど他人の環境でどう見えてるかみたいなのに拘って色使ってる人に殺される
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 3, 2018</description></item><item><title>明日から会話で使えるさなボタン</title><link>https://blog.himanoa.net/27/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/27/</guid><description>この記事は名取さなアドベントカレンダー-149日目の記事です。
毎日昼夜問わず さなボタンをクリックし続けるせんせえがたの皆さん、お元気でしょうか？
私は
Discordでさなボタン押せるBot書いたのでVティークの宣伝させてみた? https://t.co/qFvyMRur4e
#名取さな #さなボタン pic.twitter.com/B7094xWPSB
&amp;mdash; ひまのあ????@1日目 西め07a (@h1manoa) July 1, 2018 を作り身内鯖のDiscordにデプロイしてみんなでさなボタンで会話したり辞世の苦(575)を詠んだりなど楽しくやっております。
今回は、身内鯖での研究の成果として 明日から会話で使えるさなボタンと称し、汎用性の高いフレーズだけ取り上げていきたいと思います。
笑い声、あいあい、てね、ややや うんうん 各種 人間との会話において相槌を打つという行為は非常に重要な役割を持っていることは自明だと思います。
そんな相槌を254 パターンものバリエーションで収録されているので、会話が続かない無口なせんせえがたでもボタンを何時もの通り押してるだけで会話として成立することができます。行動を起こさなくても相槌が打てる便利な世の中になっており完全に2018年は最高ですね。
ありますねぇ！ 任意の事象があるときに使えます。中身のない会話をするときに無限の利便性を誇ります
承知致しました,確認させて頂きます,ご検討ください ビジネスシーンでも活躍しているフレーズで、この語録の登場はビジネスシーンの会話でもさなボタンが使えることが証明されたことを意味します
おはようございなーす01-16 朝の挨拶に使えますね。皆さんも朝は常に咄嗟のタイミングで曲り角で食パン咥えた女子高生と衝突しても咄嗟に出せるように咄嗟に出す練習をしましょう。
うそです 嘘付いたときに使えますね。めちゃかわいいボイスなので相手も嘘を許してくれるでしょう。GTAなら押した途端に手配度が下りそうですね
すこだ,すこすこ 好きな物を見た、きいた時に咄嗟に出せるようにこちらも要練習なボタンです
わかんないけど01(つぎ),02(ありがとう) わかんないけど話を進めたい時や礼を言いたい時に使えますね
今の無し警察 失言を取り消したいときとかに咄嗟に出すと役割が持てますね。ツイートを消した時にセットで押したいボタンです
マ？ もはや自明の汎用性、相手の発言にこれで返すだけで大体それっぽく会話が繋がるウルトラボタンですね
やったぁ 全身で喜びを表したい時に使いましょう
Mu!What&amp;rsquo;s up! 途中から会話に入る時に咄嗟にボタンを押すと大体会話のコンテキストが把握できて便利ですね。
しょうがなしだなぁ… しょうがない事案が発生した時に使いましょう
最後に さなボタンだけで人間の会話を繋げることができるということがお分かり頂けたと思います。
DiscordのBotの方ですがさなボタンの更新に追従する機能だったり、Reactionが付いた時に音を出す機能などを実装していきたいと思っております。</description></item><item><title>家宝</title><link>https://blog.himanoa.net/26/</link><pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/26/</guid><description>何事かよ？と深夜にわらってしまった　ってね　ってねってねてねてねてねんてねｔねんてｎ https://t.co/XUVYbcNBsF
&amp;mdash; 名取さな??ば〜ちゃるな〜す (@sana_natori) 2018年6月18日 ・・・・？？？？ｗｗｗｗｗｗ？？？？ｗｗｗｗｗｗ
&amp;mdash; 名取さな??ば〜ちゃるな〜す (@sana_natori) 2018年6月18日</description></item><item><title>夏コミ当選しました</title><link>https://blog.himanoa.net/25/</link><pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/25/</guid><description>コミケ当選してました
サークル名はお気持虚無同盟で @potato4d @h1manoa @nametaketakewo_ と合同誌出します！ pic.twitter.com/zC1VDDhscK
&amp;mdash; まさあき a.k.a. いっしー (@masaakikunsan) June 8, 2018 当選しました。まだ何書くか確定してないのですががんばりますので各位来てくれ</description></item><item><title>Linux デスクトップ環境 2018</title><link>https://blog.himanoa.net/24/</link><pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/24/</guid><description>元々macOSがあまり好きではなくUbuntuなりArchLinuxで開発したいという気持ちがあり、かといってMacBookにLinux入れたくなかった。
ついに新しいラップトップをかったので、Linuxで開発環境を構築して運用しているよって話です。
ブログ書く意気込みとしては Linux デスクトップ環境 2017 - k0kubun&amp;rsquo;s blog に影響されている感じです
コンセプトは自分が使いやすい(設定を弄りやすい。GUI含めて細かい所まで弄りやすい)です。
そもそもmacOSのどういうところが嫌いなの？ UNIX互換な環境が欲しいならMacで十分じゃないの？っていう人は多いと思うので僕がmacOSに対して感じている不満に付いてまとめます。
Window Manager 同一のアプリケーションを二つのウィンドウで起動している時(Chromeの「新しいウィンドウで開く」) Command + Tabで片方のウィンドウしか選択できない ショートカットキーだけでカレントウィンドウのワークスペース移動ができない Window Managerに自由がない(好みのWindow Managerに差し替えられない) ターミナルエミュレーター まともな速度でレンダリングできてTrueColor出せて日本語入力できるターミナルエミュレーターが存在しない(iTerm2はレンダリング遅い) macOSのアップデートが信用できない セットアップ時にxcode抱き合せセットをダウンロードさせられるのがつらい 現在のLinuxデスクトップ環境 ディストリビューション プログラマが開発環境を作るなら、Arch Linux vs Ubuntuみたいな所だと思うが僕はUbuntuを選択しました。
理由については後述するとしてさきに二つのディストリのメリデメを挙げようと思います。
Ubuntu メリット UbuntuServerのノウハウが生きる(aptの使い方だとか) インストールしたらハードウェアのこと考えなくてもとりあえず動く WindowManagerに関してもとりあえずデフォルトでGNOMEが入るので悩まないのがいい デメリット aptで入ってくるパッケージのバージョンが古い 例えばtmuxは未だに2.5が入ってくる 最初から色々入っており小さくないので壊れた時(Archに比べて)直しにくい バージョン上げるのが大変 Arch メリット ローリングリリースなので普段からパッケージを更新しとけばバージョンを上げるのが大変といったことがない Ubuntuより新しいパッケージが入ってくるのが早い 充実したAURとyaourt Git repositoryからHEADを直接インストールできたりと柔軟性がある 最初は殆ど何も入ってないのでUbuntuに比べて壊れた時に直しやすい ArchWikiが優秀というのはある デメリット ハードウェアのドライバどれいれるかとか調べないといけない 初回だけとはいえそういうところで消耗したくない… Ubuntuに比べてアップデートが頻繁でたまに壊れたりする んで僕がUbuntuを選択した理由なんだけど、これは単純でハードウェアのドライバ周りで消耗したくなかったからです。</description></item><item><title>xrandrコマンドで解像度を弄る</title><link>https://blog.himanoa.net/23/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/23/</guid><description>ThinkPad X1Carbonを購入してから早4カ月経過しました。
スペック的には不満がないんですが、解像度がおおきすぎて文字が小さくてつらいという問題があったので解像度を下げたくなったのでやった。
XWindowManagerでやっているので以下のコマンドで解像度を設定できる
&amp;gt;&amp;gt;&amp;gt; xrandr --output eDP-1 --mode 1920x1080 以上
X1Carbonリッチに2560*1440のモデルを買ったけどフォント小さくて1920*1080で運用したら丁度よくて宝の持ち腐れになってしまった
&amp;mdash; himanoa.tsx (@h1manoa) March 20, 2018</description></item><item><title>Nの末路</title><link>https://blog.himanoa.net/22/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/22/</guid><description>ゆるキャンみて心がアになってる
&amp;mdash; ? 2/25~郡山帰省 (@KlmSyr) February 24, 2018 うわああああああ
&amp;mdash; ? 2/25~郡山帰省 (@KlmSyr) February 24, 2018 俺だって俺だって！！！！！
&amp;mdash; ? 2/25~郡山帰省 (@KlmSyr) February 24, 2018 俺だって！！！
&amp;mdash; ? 2/25~郡山帰省 (@KlmSyr) February 24, 2018 人生で自分が何かしらの理由で捨ててきた物を上手く表現できてるアニメにハマる傾向があって例えばゆるキャン△は、普通の高校生活っていうんですけど
&amp;mdash; prettierに脳を破壊されてしまったプログラマー (@h1manoa) 2018年2月14日 微妙に拗せて終わってしまった心に染みるアニメ ゆるキャン△</description></item><item><title>私的TypeScriptいろいろまとめ</title><link>https://blog.himanoa.net/21/</link><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/21/</guid><description>flowがすぐ壊れて何も信用できなくなってつらかったのでTypeScript入門することにした。
webpackでとりあえずproduction用とその他でsourcemapを出し分けできるようにしたのでいろいろメモする。
筋悪い箇所があったらTwitterかはてブのコメントで頼む
tsconfig.json { &amp;quot;compilerOptions&amp;quot;: { &amp;quot;target&amp;quot;: &amp;quot;es5&amp;quot;, &amp;quot;module&amp;quot;: &amp;quot;commonjs&amp;quot;, &amp;quot;moduleResolution&amp;quot;: &amp;quot;node&amp;quot;, &amp;quot;emitDecoratorMetadata&amp;quot;: true, &amp;quot;experimentalDecorators&amp;quot;: true, &amp;quot;declaration&amp;quot;: false, &amp;quot;noImplicitAny&amp;quot;: false, &amp;quot;noImplicitReturns&amp;quot;: false, &amp;quot;removeComments&amp;quot;: true, &amp;quot;strictNullChecks&amp;quot;: false, &amp;quot;outDir&amp;quot;: &amp;quot;build&amp;quot;, &amp;quot;lib&amp;quot;: [ &amp;quot;es6&amp;quot;, &amp;quot;es7&amp;quot;, &amp;quot;dom&amp;quot; ] }, &amp;quot;exclude&amp;quot;: [ &amp;quot;dist&amp;quot;, &amp;quot;build&amp;quot;, &amp;quot;node_modules&amp;quot; ] } moduleをcommonjsにしてしまったけどwebpackでの最適化の都合を考えると esModuleInterop の方がいいかも
strictNullChecks は依存で壊れがちらしいのでオフにしている…オンにしたい…
webpack.config.js const path = require(&amp;quot;path&amp;quot;); const ENV = process.env.NODE_ENV || &amp;quot;development&amp;quot;; const DEV_PORT = process.env.PORT || 4444; const webpack = require(&amp;quot;webpack&amp;quot;); const CleanWebpackPlugin = require(&amp;quot;clean-webpack-plugin&amp;quot;); const HtmlWebpackPlugin = require(&amp;quot;html-webpack-plugin&amp;quot;); const ExtractTextPlugin = require(&amp;quot;extract-text-webpack-plugin&amp;quot;); module.</description></item><item><title>Windows Subsystem for Linuxで開発環境を整えた</title><link>https://blog.himanoa.net/19/</link><pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/19/</guid><description>WSLあらかた満足した pic.twitter.com/y9LBA797Qg
&amp;mdash; Internet Subscriber (@h1manoa) January 30, 2018 ndenv とか pyenv とか rbenv とか tmux とか fish とか neovim とか fzf とか色々動いたし、True Color出せるということもわかったので、まぁ常用はできるんじゃないですかね？といった所。常用するかどうかは知らん。まだ課題点もいろいろあるし。
導入 WSLチュートリアルがあるので これ通りやった。 https://github.com/QMonkey/wsl-tutorial
XWindowSystemが必要なアプリケーションを使う予定がないならXLaunch入れたりとかはしなくていいとは思う
あとは普通のUbuntuなので必要なアプリケーションをインストールしていくだけ。
僕の環境は多分大体以下のコマンドで再現できると思う
sudo apt-get install software-properties-common sudo apt-add-repository ppa:fish-shell/release-2 sudo add-apt-repository ppa:neovim-ppa/unstable sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install neovim fish tmux go git build-essential openssl libssl-dev libbz2-dev libreadline-dev libsqlite-dev gcc python-build git clone https://github.com/sstephenson/rbenv.git ~/.rbenv git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build git clone https://github.</description></item><item><title>WSLでクリップボードを共有する</title><link>https://blog.himanoa.net/20/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/20/</guid><description>Windows Subsystem for Linuxで開発環境を整えた の続きの記事です。まともに使ってみたところ、NeovimのyankがWindowsのクリップボードに入ってくれないのが結構ストレスになったのでそれの解消をします。
Windowsにはclip.exeというソフトウェアが搭載されており、これを使うことでWSLからWindowsのクリップボードに文字列を入れることができます
echo &amp;quot;:innocent:&amp;quot; | clip.exe # wsl Terminal上でShift + Insert :innocent: ただ、このソフトウェア単体だとクリップボードから文字列を取り出すことができないのと、文字列の最後に改行コードが入るらしく(余計なことしやがって)つらいので別のアプローチでやります
先にやっておくこと https://github.com/equalsraf/win32yank/releases から win32yank-x64.zipをダウンロードしてきて展開 展開して出てきたwin32yank.exeを WSL上でecho $PATHして列挙されたディレクトリのいずれかに配置 win32yankの使い方は clip.exe と大体同じで以下のように使う
echo &amp;quot;poepoe&amp;quot; | win32yank.exe -i win32yank.exe -o poepoe 念のためWindows上で任意のテキストボックスでCtrl+vして貼り付けられるか確認しておくと良いかもしれない。
Neovimからwin32yank.exeを使う さてここまでできたのなら、Neovimから yでヤンク、pで貼り付けるみたいなことをできるようにしたい。
過去の記憶からNeovimでLinuxのクリップボードと連携した時に xsel に依存していた覚えがあった。
また、丁度手元にNeovimのソースコードがあったのでそこから検索して(最悪書き換えてビルドすればよい)どうすればいいかを模索した
cd ~/src/github.com/neovim/neovim git grep xsel runtime/autoload/provider/clipboard.vim:&amp;quot; When caching is enabled, store the jobid of the xclip/xsel process keeping runtime/autoload/provider/clipboard.vim: elseif exists(&#39;$DISPLAY&#39;) &amp;amp;&amp;amp; executable(&#39;xsel&#39;) &amp;amp;&amp;amp; s:cmd_ok(&#39;xsel -o -b&#39;) runtime/autoload/provider/clipboard.</description></item><item><title>正しい(Neo)Vimのやめ方</title><link>https://blog.himanoa.net/12/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/12/</guid><description>この記事はN高 Advent Calendar 2017の記事です。N高要素がないどころが本人が卒業生です。
やめた理由としては、今年の春にN高を卒業したということで頭文字がNだったのと、vimscript書きたくなくなってきたのと、vimconf2017でのt9mdさんのvmp: the most ambitious vim emulator - Qiitaを効いた結果やめられそうな気がしたからです。
AtomはJavaScriptでplugin書けるので便利ですね。
Vimの沼 大体主な理由は以下の通りだと思います
vimscriptに恋をしてしまった 秘伝のconfigファイルでキーバインドを染め上げてしまった 僕は2つめに該当していたが色々不満が出てきたのですが、いい加減vimrc管理するのに疲れてきたのと、色々vimの使い方が変わり vimrc からキーバインド設定が消えてきたところでvimconf2017でvmpを知って「これでも生きて行けそう」感が出てきたので移行しました。
Atomへ移行してからはvmpを入れたのとlinterとgit-plus入れただけで対して弄ってないので、そこに至るまでの軌跡について書いて行こうと思います
キーバインド設定を減らしていく vimのキーバインド設定を減らしていく方法として素のvimを使うのがおすすめです。がPluginなどを入れて開発している人は素のvimでは生産性が落ちてしまうことでしょう。
vimtutorをやりましょう。vimtutorはvimでの効率的なテキスト操作方法を手になじませてくれます。機能を覚え尽くす勢いでやりましょう。
ここで知らなかった便利機能をオレオレキーバインドでオーバーライドしてるのだったら自然とキーマッピングの設定がが消えていくことでしょう。
もっと便利にVimを使えるようになる Vim幼稚園からVim小学校へ - Qiita
↑の記事も詳しくvimの機能について記述してあります。ここに書いてあることを無意識に使えるようになる頃にはキーマッピングの設定もだいぶ少なくなってくる頃でしょう。
別のエディタを入れる ここまで来たらもう一息です。別のエディタをインストールしてvimキーバインドを提供してくれるプラグインを入れるだけでもだいぶ快適にテキスト編集できるはずです。この際にvimを完全にアンインストールしないで、いざってときは使えるようにしとくと便利でしょう。
移行してよかったこと Rubyのハイライトが体感軽くなった気がする JSでハックできて便利 git-plusが便利 MarkdownPreview、使わないでMarkdown書いてること多かったし今も使ってないんですけど Markdownで斜体と太文字のシンタックスがわからなくなったときに便利 我慢してるけど本当につらいこと C-z rspec(別に任意のコマンドでもいい) fg の一連のコンボ技ができなくなったこと 正規表現 ノーマルモードでq:が出来なくなったこと(exコマンドをvmp-ex-command使ってるがvimに比べて貧弱なこと) タブとペインの包含関係が逆になったのがつらい バッファという概念がないこと Vimのキーバインドを他のエディタで使ってるの卒業できてないのでは？ …
追伸: 2018/01/31 ダメでした。上記の方法でVimを卒業したつもりになっていましたが気づいたらNeovimを使っています。</description></item><item><title>20歳になりました</title><link>https://blog.himanoa.net/18/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/18/</guid><description>20170130で20歳になりました。酒が飲めて便利な年齢ですね。 20歳と言えば
20歳童貞とかマジで悲しい
&amp;mdash; 孤高のラトリンログ (@UeNhMrzZ4gwj5Kq) 2018年1月28日 といった年齢なんですが当方はダメでしたね。来世に期待といったところ。
20歳ってMMOの最初のレベルキャップのイメージがあって、いろいろエンドコンテンツが開放されてくイメージがあったんですけど、以外となんともないですね。
酒 人生の先輩に酒の限界値を知っておくべきといわれたので、会社休んでストロングゼロ DRYでベンチマークをしていた。(やったのは日付回った瞬間からなので過去形)
結論ファーストで行くと 吐いたやつ pic.twitter.com/zRq01AQIcP
&amp;mdash; Internet Subscriber (@h1manoa) 2018年1月30日
が限界で3缶飲むと var_dump(食った物) することになるということがわかった。
イキりオタク的な事を書くと1缶は余裕なんですけど2缶目は大体vimの操作ができなくなって3缶目は言動が終わる。
あとガチで悪酔い中にやったゴッドフィールドが面白かったのでゴッドフィールド神ゲーだと思った(本当か？)
確実に酔っていて、つまみたべるまえに「ご飯を食べるまえにはいただきますっていうんですお」とかいいながら爆笑している
&amp;mdash; Internet Subscriber (@h1manoa) 2018年1月29日 おーーーーーーーーーーーーっっほいっっっっっっっっっっっっっっっっっっっっっっっっっっっっっっwWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
&amp;mdash; Internet Subscriber (@h1manoa) 2018年1月29日 いつもの 飲みにいくぞ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!etcご用があったら Twitter まで。 Twitterもってないマンはさすがにいないと思うけど matsunoappy@gmail.com まで連絡くだしゃい。正直こっちはあんま見てないけど
誕生日プレゼントマジで頼む!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! http://amzn.asia/5dZqBma</description></item><item><title>asdadsasdasdasd</title><link>https://blog.himanoa.net/17/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/17/</guid><description>飲みに行くぞ!!</description></item><item><title>2017年9月16日 くもりだったりはれだったりくもりだったり</title><link>https://blog.himanoa.net/5/</link><pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/5/</guid><description>日誌 今日から家族で北海道に来ている。
朝7:00に家を出て、車で空港に行って昼から飛行機に乗って1400くらいに新千歳空港に到着みたいな感じ。 で、そこから薄野で御飯食べてアパホテルに泊っている感じの世界観です
すすきのは初めて来たんですけど人が少ない渋谷みたいだなぁといった感想でした。
今は深夜ですがこのサイトのSEOを改善したりTwitterしたりとかなり適当な感じですごしています
やっていき ブログの進捗が出たので神</description></item><item><title>ニコ生でプログラミング配信がしたかった</title><link>https://blog.himanoa.net/16/</link><pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/16/</guid><description>とりあえず環境構築して2枠くらい配信してたんだけど、おもったよりうまくいかなかった?
最強の環境を作った pic.twitter.com/3OjjTG2xUq
&amp;mdash; 50killほ○ (@h1manoa) January 15, 2018 やりたかったこと Facerigでかわいさ VOICEROID2 + ゆかりねっとでかわいさ Atomプラグインを作りたかった 現実 Facerigかわいかったけどあんまうごかなかったしあれ トーク力が低い ぼやきをうまく認識できなくて終始日本語を喋れてなかった コードの進捗がわるい 放送終了してるのに気づかない コメント なんかボロボロな出来でした。まぁ見てる人もコメントに困る内容だったよね。 雑に放送環境を作成してやってみたけどやっぱりコメント読み上げとかは必要だと思う。あと自動で次の枠とるやつ。 ぼやきのやつは致命的なんですけど。これはどうしようもないですね。僕が琴葉葵をやめるしかない
つーかあのかわいいやつどうやってるの 最強の環境を作った pic.twitter.com/3OjjTG2xUq
&amp;mdash; 50killほ○ (@h1manoa) January 15, 2018 これのことなんだけど構成図見てもらった方が理解しやすいと思うのでそっちをまず
世界観です pic.twitter.com/s8eTiFmhDL
&amp;mdash; 50killほ○ (@h1manoa) January 15, 2018 配信はOBSでやっていてChromeRemoteDesktop経由でUbuntuマシンの画面をキャプチャしてFacerigのっけて配信してるだけ。琴葉葵さんボイスでしゃべってるのはゆかりねっとで認識させてライン入力にボイロの出力食わせて、そいつをOBSに食わせるみたいな感じ。だれでもできますね。
ハマりどころとしては、Chromeのハードウェアレンダリング切らないとobsでキャプチャしても真っ黒になってしまうので切ること。 まともな配信環境整えたらリベンジしたいね
屍超えていきたい人に向けてなんですけど、プログラミングしながらトークするのはやっぱり修羅だと思うのでコメントが勝手に賑わってくれるようなシステム作るのは考えた方がいいし、集中切れた時にコメント視るくらいになると進捗すると思う。基本的にコードが話題になることは少ないので、事前にブログに書きたかったエモい話とかで盛り上れるといいかもしれない。とにかく空気感作ってくのが大事
お題としてはゲームとかWebサイト作るとかだと見栄えもいいのでそういうテーマの方がやりやすいと思った。あとは慣れないことすると調べてる時間が長くなりがちなので放送時間は長くやることを前提としてやったほうがいいですね。これは間違いない。</description></item><item><title>2017年と今後</title><link>https://blog.himanoa.net/15/</link><pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/15/</guid><description>今日部屋の掃除をしたら自分の中の時間が動き出した気がしたんですよね。
気付いたら2017年も終わって2018年になったいたので昨年のふりかえりと今年の話をまとめとく
2017年 まとめ 無事学校卒業して職に付けたのでよかったと思う。が、結局目的も持たず何も考えないし何もしないまま2017年終わってしまったので虚無虚無しいですねといった感覚。
職をやっているのですが慣れてないことを職でやるのは大分しんどいので日頃から、職で使うライブラリだったり言語だったりの素振りをやっておくべきということがわかった。
あとやっぱり高専退学してから人間関係が滅法苦手になった。
1月 普通に学校生活してたと思う。
ポッピンQにドハマりしてて何回も映画館に足を運んでた時期
プログラミング感で言うと どどんとふ のUXが悪すぎてつらかったのでHTML5 + JSで再実装してえなぁとかいって @potato4d とかと実装してた覚えがある。結局、身内であんなりTRPGが流行らなかったので開発モチベが下ってきてお流れになってしまったが。誕生日あたりから沖縄に左遷されてたんだけどLTEつかめなくてインターネットから隔離されて完全に虚無になってたのも覚えてる
2月 ポッピンQ上映延長決まって神神神ってやってた。人類はTwitterクライアントを求める…みたいな気持ち感だったのもあり卒業制作で niwatori を作ってたのを覚えてる。スクーリングも行ったが テストが配られなくて 一時間別室待機させられたあげくこっちの意思の組み取りもなしに1時間スケジュール遅れさせられたのにブチ切れて後半の科目ブッチした。
3月 2月のスクーリング分取り返すためにちょっと登校した。春休みは完全にダレていて、ゲームしまくってコードは全然かいてなかったと思う。 ポッピンQの応援上映見に塚口までじゅうはちきっぷで飛んだと思う。あの頃の僕は思考回路が焼き切れた気がする。ネカフェで寝る生活をするのはあまり快適ではないということがわかった(寒い)
4月 業務委託で働き始めた。最初はずっとPHPでチョコチョコした仕事をしていたと思う。この頃から趣味で全然コード書かなくなった気がする
5月 Railsな仕事になった。
6月 心が虚無になりながら仕事していた。あんま覚えてない
7月 ここも虚無
8月 虚無
9月 API書いてJavaScript書いてとかやってたと思う。この辺りから大分仕事に慣れてきてた気がするが、正直仕事は炎上気味でつらいなーつらいなーしてた。片手間でAnsible書いてた。虚無
10月 JavaScript書いてた。一人炎上してたがメンバーみんなJavaScriptわからん…みたいな感じで一人で燃えてた。全て俺が悪い気がする
ここは完全にいい話があって、金がいい感じに溜ってたので一人暮しを始めた。あとThinkPadX1C購入したりした。
11月 一人で炎上して何とか動いてたJavaScriptをリファクタリングしてた。依存関係上複数分割してPR出すのが難しくて一つにまとめてしまって後々色々大変なことになってしまった。
12月 ↑でやったやつが本番で壊れたりして?になった。あとなんか取り返しの付かないミスしたりした。年末に家のオートロックに閉め出された
趣味でコード書くのがそろそろ再開できていてとりあえず https://himanoa.net の開通とかやった
Twitterではてブ乞食したら22くらいまで伸びた。
今年よかった 引っ越し パソコンかった 卒業 仕事につけた not よかった コミュニケーションが絶望的に苦手 職以外のコーディング ブログ 勉強会など 色々な物事に対する姿勢 物事に対する姿勢は誠実性がなかったなぁと思う。(ゲームやってる時もなんかゴミみたいな発言くりかえしてた気がする。一緒に遊んでくれた各位本当に申し分けない?
2018年 Webサービスで一発 ブログ一週間に1postできたらいいですね ネタ帳をあたためていきたい 登壇する 誠実 アウトプットをまったくしなかったので今年はブログ書くコード書く登壇するを目標にやっていきたい。 Twitterの交友関係がちょっと広くなって色々なプログラマーを見た感覚として 一人で幅広くやれるように努力値を振ってくのもいいよなーとおもいました。</description></item><item><title>腹痛くなりました。もうすぐ死ぬと思います</title><link>https://blog.himanoa.net/14/</link><pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/14/</guid><description>遺産相続先は @h1manoa まで</description></item><item><title>himanoa.netを開通させたぞ！！！！</title><link>https://blog.himanoa.net/13/</link><pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/13/</guid><description>https://blog.himanoa.net はあるのに https://himanoa.net がないのはおかしいよねっていう指摘を受けて5億年くらい経ったんですが、僕に紹介する自己が存在しなかったのと、CSSとか書けないし置くプロダクトもないしなぁとか思って恥ずかしさから作ってなかった自己紹介サイトを早朝の4時間くらいで作りました。
サイトデザインは色を適当なパレットから拾ってきて、あーでもないこーでもないしながらちょっと色見調整してCSSに落とし込むみたいな、コンポーネント指向とかとも無縁な感じで組んでみたんですけど、僕がCSS書いたにしては、モバイルでもちゃんと見れるようになったしそれっぽいデザインになったなぁといった感じで自画自賛できるくらいの出来なのでみんな見てくれーーーーーーーー
これだけだと記事にしては何も面白くないのでデザインからデプロイするまでに得た知見とかを載せて締めます。
見てる画面の解像度に合わせてdivの高さを調節する。 https://himanoa.net の白い部分は、スクロールしない限り高さをブラウザの描画サイズになるようになっています。
JavaScriptで window.innerHeight をCSSに適用させとけばいきそうみたいな感じで目論んでいたのですが、いろいろ調べてみたところCSSにはvhという単位が存在し　これを用いると「ブラウザのサイズに依存せずに画面のどれくらいの高さを占めるか」といった感覚で単位を当てることができます。
なので、先程のJavaScriptでうんたらかんたらせずとも height: 100vh とだけ書いとけばどの環境でも意図した高さになりレスポンシブも実現できるという分けです。便利
Flexbox スキル欄のタグがブラウザのサイズがめっちゃ小さくなってもいい感じに並んでくれるのはFlexboxを用いてます。
Flexboxを用いると要素を規則的に並べるのが非常に楽になりました。折り返しの設定や並び方の設定などがいじれるのがよさです。
また、従来のfloatレイアウトに比べてclearfixを気にしなくていいのも嬉しいです。
netlifyが神 ちょっと前に騒がれてたnetlifyがデプロイ先として僕の要件をクリアしていたのでここでホスティングしています。
GitHubのリポジトリを見てくれるのでpushに応じて自動でビルドしてページを更新してくれるので、サイト管理も楽なのが良かったです。
あとはどこのディレクトリをドキュメントルートにするかもnetlify側で決められるのでgithub pagesと違い、gh-pagesみたいな余計なブランチを生やさなくてもいいのとhttps対応がクリック一回でできるのもよかったです。</description></item><item><title>インターネットに生かされ殺された愚者</title><link>https://blog.himanoa.net/11/</link><pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/11/</guid><description>だーれだw</description></item><item><title>ThinkPadX1Carbon 5th にUbuntu17.10を入れる</title><link>https://blog.himanoa.net/10/</link><pubDate>Tue, 05 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/10/</guid><description> 情報が散らばっててたので作業ログをまとめます。最近まとめブログみたいなことしかしてないなこれ。
セキュアブート無効化 Windowsをセットアップして再起動したらコントロールパネルを開き、&amp;lt;ハードウェアとサウンド&amp;gt;→&amp;lt;電源プランの選択&amp;gt;から、高速スタートアップを有効にする(推奨)のチェックを外す。(非アクティブ状態の場合は詳細情報をクリックするといじれるようになると思います
Ubuntu USBブート後 トラックパッドが効かなくてカーソルの操作ができないと思うのでできるようにします。
Winキー押してterminalと入力してEnterを押すとTerminal Emulatorが開くので以下のコマンドを手で入力して実行します
sudo modprobe -r psmouse sudo modprobe psmouse proto=imps トラックポイントが操作できるようになると思うのであとは普通にインストール
インストール終了後のSSDからの再起動後 ログイン画面で歯車マークをクリックしUbuntu on Xorgを選択する。 Ubuntu 17.10からWaylandが採用されたが日本語入力が不可能なのとバグが多数あるためとりあえず無効化しておく
grub.cfgを弄ってトラックパッドが効くようにする インストール時は無理やりなんとかしたが、このままだと起動するたびに上記のコマンドでトラックポイントの有効化をしないといけない。 それはだるいので、ブートローダーの設定を弄って解決する。
以下のコマンドを実行
sudo vim /etc/default/grub
１１行目を以下に書き換え
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash psmouse.proto=imps
書き換えたらgrubのconfigを適用させたいので sudo update-grub を実行する
ホームディレクトリのディレクトリ名の英語化 LANG=C xdg-user-dirs-gtk-update</description></item><item><title>ぱくとまのブログから学ぶぱくとまの歴史</title><link>https://blog.himanoa.net/9/</link><pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/9/</guid><description>先行はもらった！この記事はぱくとまアドベントカレンダーの記事です。まだまだ枠が開いてるので各位どんどん埋めてってくれ。二週目もあるぞ！
んで、例年（2年目）なんですけど内容は全くぱくとまについて掠りすらしてない楽しいエントリーで溢れてるんですが、当日までにぱくとま以外のネタを用意できなかったので、今年はぱくとまについて書こうと思います。
ぱくとまおもしろポイントとしてはやはりブログですね。今年と去年で自分のブログを3回書き直した人としてはここに触れていきたい。
というわけで、僕が独自に面白かった記事をまとめていきます。引用してツイートするときに便利したり各位で有効活用してくれ。
後期中間テスト https://pakutoma.pw/?page=45
爆死した悲壮感があって趣がありますね。最近滅多に本人の口からでなくなった気がしますが、ぱくとまといえば「めう」といった感覚が思い出せていい感じですね（めうファンに殺されそう）
メリットのある退学か否か https://pakutoma.pw/?page=47
タイトルの字面が神
ブログ書いたよ https://pakutoma.pw/?page=2
人生って何なのかな https://pakutoma.pw/?page=3
人生について悟りを開いたと思ったら死にました。
ひゃっほう https://pakutoma.pw/?page=8
掘り返すと便利
CSS更新♪ https://pakutoma.pw/?page=17
最近我々こういう♪みたいな文字列を使わなくなりましたね。絵文字は多様するが。こう、古きインターネット感を尊重しろ
かのんはクソ https://pakutoma.pw/?page=63
僕のブログ記事を引用するのをやめろ https://pakutoma.pw/?page=67
この記事だけ開くと失明するんですけど
バイトを始めた https://pakutoma.pw/?page=68
吉野家
ゆるして https://pakutoma.pw/?page=70
ぱくとまが炎上した話ですね。この話、炎上したことは知ってるんですけど詳しく知らないんですよね誰か詳細求む
モテないオタクとクソネット恋愛 [https://pakutoma.pw/?page=82](https://pakutoma.pw/?page=82]
タイトルの字面がやばいんですけど、ぱくとまがネット恋愛していた頃の記事ですね。僕は経験がないのでわからないのですがネット恋愛だけはしてはいけないということがわかりました。最後の「姫を囲ってる方がずっと幸せです」はオタク各位に刺さりそうですね。
今のひねくれを続けてるのと姫を囲うのとではどっちが幸せだったか、結構難しいテーマだと思います
衝撃！某牛丼店で一番多い質問とは！？ https://pakutoma.pw/?page=89
アタマでしょの始まりだったと思います。多分
留年したくない https://pakutoma.pw/?page=91
退学
とりとめのない思考 https://pakutoma.pw/?page=92
脳内のコアダンプって言葉好き
幸せについて https://pakutoma.pw/?page=106
なんかこの人エモいこといってっるーーーーー
新人教育についての悩みの話 https://pakutoma.pw/?page=113
僕この記事で初めて知ったんですけど、ぱくとまブログの本文ってセマンティクス存在したんですね。 内容は僕にはわからなかったです。なぜなら人の上にたったことがないため
BEMYBABY https://pakutoma.pw/?page=117
最近めっきり見なくなりましたね。この頃だったと思うんですけど、アプリケーションのテストデータにぱくとまの顔使うの、ちょっと好きでした。
オープンソースという思想が欺瞞だったのだ https://pakutoma.pw/?page=120
禁酒(12月まで) https://pakutoma.pw/?page=132
だめでした
総括 ぱくとまって意外とブログ書いててすごいなって思いました。僕とかは作って放置してシステムごと爆破なんていつもやってるのでそういう姿勢を見習っていきたいですね。
定番のやつ 明日は圧倒的コンテンツ力を誇る張本人@pakutomaさんです。酒のことについて書くらしいので楽しみにしましょう。僕は未成年なので酒呑めないんですけどね！</description></item><item><title>近況報告</title><link>https://blog.himanoa.net/8/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/8/</guid><description>最近思ったけどTwitterに書かなかったこととか、先月 + 今月あったこととかまとめようと思う
日報を付け始めた https://nippo.wikihub.io/
会社で日報を付けてたんだけど結構よかったので私用でも始めて見ることにした。(会社での日報は誰も見てくれてなさそうみたいな気持ちがあって挫折してしまったが)
WikiHubで日報書くのは結構楽しく、特に良さげなのは日報書いた翌日に自分の日報に対してemojiが付くのが良い。書いた文章を誰かしらが見てくれてるんだなぁっていうのは次も書いていくぞっていうモチベーションに繋る。
あとは他人の日報を見るのが思ったより楽しいというところですね。他人の生活を覗くのって結構新鮮で小学校の時に交換日記とかやってた人はこういうのを味わっていたのかぁって思った。インターネットが普及した今こそ見知らぬだれかと交換日記するのも楽しいかもしれませんね。書いてて思ったんですけどこれどうぶつの森のメッセージボトルっぽいですね。あれも楽しかった。
Markdownの見出しって#打つの結構辛くない? Shift + 3って結構押しにくいと思うんですよね。僕は左薬指と左中指で押してるんですけど左の薬指が破壊されそうな曲り方してるので心配です。と思ったんですけどSKKバリバリ使う都合上、「英数」キーにShiftを割り当ててたんでこいつを使ってShift押せば過労が減りますね。完全に便利だ。
引っ越しの準備 社会人になって半年位立っていてそろそろお金も貯まってきたのと、片道2h30mの通勤が死ぬほど辛くなってきたので引っ越すことにしてて、引越す準備をしていた。 もう住む家も決まってて契約も済んで今日は新居で使う家具だとか食器だとかを親と買い漁っていた。
一人暮スキルみたいなのが何もないので引っ越してから生きていけるかそれなりに不安もあるんだけど、やっぱり親との依存関係を切り離せるのは一人の人間としての喜びがある。あとは抱き枕カバーとかも解禁って考えると気持ちが高まってくるよね。
人生設計の中で20歳になるまでに親元から離れるっていう目標があったので達成できたのでよかった。
Haskell入門を買った Haskell入門 関数型プログラミング言語の基礎と実践 | 本間 雅洋, 類地 孝介, 逢坂 時響 |本 | 通販 | Amazon を買いました。最近忙しいから読書ペース落ちてて今は3章の終わりまで読んだ。Haskellおもしろいなぁって思うんですけどやっぱり今までやってきた言語の用語と被ってるが意味違う用語とかが結構おおくて、その辺りのコンテキストスイッチングに時間掛ってたりだとか、新しい概念をなんとなく理解するのに結構時間かかったりしていて、3年前とかに比べて脳味噌が腐ったというか、老化を感じた。19歳でこんなだし30歳とかになるころには廃人同然の体っぽそうですよね。
はやくHaskellで実用的なプログラミングをしてみたいなって感じがするんですが、結構ピーキーな言語な気がしていて、このじゃじゃ馬を乗りこなすことができるかっていうと結構怪しいし手腕が求められているなぁと
半年間働いて見ての感想 TL; DR 卒業当初より思ったより仕事が出来ている感じかなぁといった感じ。新人研修を全く受けずに仕事してたんですけど思ったより様になってたと思う よくもわるくもまぁこんなものかなって感じ。世の中の学生エンジニアは社会に対する期待がかなり高いと思うのでその辺の値は下げといた方が無難ですよ。感がつよい あともっとつよくなりたい
まぁそれだけ書いてもあっさりした感想だなぁ。で終わると思うので諸処思ったこととかを記述することにする
自分のレベル感とか 半年間働いてみてなんとなく立ち位置がぼんやりと見えてきたといったところで、どれくらいかというと高くも低くもないといった感じだと思う。最近業務委託からのアップグレード入社を決めたんだけど、そんときに言われたのは「会社に直接コミットできるほどの力がないのでまずはチームにコミットすることを考えてくれ」だ。まぁそれくらいの力が自分でも妥当なのかなって気持ちです
まぁ働いてると他人の書いたコードを見た時に「グワーっ」ってなることもまぁそれなりにあるので、そういうレート帯にいるんじゃないんですかね。取り柄とかもないので精進あるのみ
やりがい 今いるチームでやっていくことでレベルで学びがあって自分のパワーが上昇するかというと正直わからない。ただプロダクション環境で重いクエリが走るとマジでDBがやばいことになるっていう体験は始めて(そこまでデータ量が入ったSQLで遊ぶの意)なので、自分が書いてるコードでどんなクエリが発行されてどれくらい実行時間がかかるのかとか、このテーブルにはどれくらいのデータが入ってくるか見積って愚直にコード書いても大丈夫かを見極めたりするのは新鮮で楽しい。
今やってるやつが落ちついたら微妙な開発環境を整えたりしたいなぁみたいな夢もまぁあるので、まだ仕事を楽しんでる部類の人間にカテゴライズされるんじゃないかなぁ多分。といったところ。
悪い点を上げてくと、やっぱり今自分が作ってるプロダクトに対して愛情が持てないのでそういったところですね。こうプロダクトに対してこれをよくしていくぞっていうよりかは金が貰えてるのでプログラミングしているっていう気持ちが強い。まぁ愛がなくてもコードは書けるので書いていくんですけど、やっぱり自分が開発するプロダクトなら自分が好きな物に対してバリューを提供していきたいって気持ちは強いし憧れがある。
あと職場が快適なのがいいですね。
つらみ 仕事のつらみなんですけど色々あって、ビジネス的正しさと技術的な正しさの間みたいなのがつらいですね。僕は基本的に技術的に正しいのが好きなんですけど、納期とか僕の力不足とかモロモロあってその辺りを崩さざるえないことがおおくてつらい。
あと納期とか考えるとすぐリファクタリングするみたいなのができないのもつらいですね。人々の祈りのスタックが溢れていく
あとは自分の力不足に起因することがおおいのがつらいですね。 Twitterとかでもそうなんですけど僕って基本的にコンテキスト依存の会話に慣れてしまってて社会で必要になるゼロベースでの説明みたいなのがすごい苦手でつらいし、かなり避けては通れなさそうで仕事するの下手だなぁって気持ちになる。
自分の限界が見えたなぁって気もしていて、まじで強い人(去年通ってたカルチャースクールの講師など)を見ていると一生追いつける気がしないなとも思っててそこら辺りが僕の限界点なんだろうなぁと思うと途端にプログラマとして労働するのに向いてない気がしてくるし、プログラマとして生きていくのをやめようって気持ちがグワーーーーッってなり最悪人が死ぬのだが、かといって自分が今から他のスキルセットに切りかえてやっていけるかというとそんな気もしないので人生八方塞がりですね?みたいな気持ちになって死ぬ。
その他すべての世界観でのつらみ やっぱり就職してから世界が変わったしそれにともなってつらみも増えたなって感覚。 勝負する世界が変わったのが一番でかいかなぁってかんじ。1~3歳僕よりも長く生きてる人と技術的勝負をしてかないと生きていけない世界に放り込まれた気がする。今まで以上にやっていきを決めていかないと生きていけない世界
あとは同期になったオタクの@potato4dとか見てると登壇実績とかバリバリあるし仕事もバリバリしてるしまじですごいよなぁって思う。僕とかが同じ土俵で話していい人物なのか時々疑問に思ったりして心が死ぬ。
比較すると僕は虚無で実績とかも無で親のキャッシュと様々な人々の気持ちに生かされてる人間に過ぎないんだなぁって実感が湧いてくるのと、これからも人々のお気持ちを集積して、希望と絶望の間でスルメイカを食いながら孤独死するんだろうなぁって考えると生きる気持ちがなくなってくる。
最近プログラミングも本腰入れて楽しめなくなってきてて、実績作らなきゃいけない危機感と生きていくための力を付けるためっていう目的が大きくなってきていて、楽しさより辛さが上回ってきている。あとやりたいことキューがたまってきてて、消化できる時間が少なくなった。こいつは引っ越せば解決する問題だと思うのでもう少しの我慢
ゲームも下手になってきてて最近ほんとうにやる気がでない。最近まで界隈で流行ってるゲームとしてPUBGをやってたんですけど、自分が地雷な立ち回りしてるっていう自覚を持ちながらゲームするのって本当につらいしストレス溜る。 地力上げるためにソロで練習したりとかもしてるんですけど、まったく上達しないストレスが募ってアンインストールしてしまった。何もできないし続かない自分にイライラする日常から解放されたいし早くこの地獄のような世の中から解放されて、来世は石とかがいいですね。</description></item><item><title>動画を作らない人のための琴葉姉妹活用法</title><link>https://blog.himanoa.net/6/</link><pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/6/</guid><description>VOICEROID2 琴葉 茜・葵を買って実況動画を作るぞ!!!!!!!!!!!!!!!! という気持ちになったのはいいんですが、動画制作周りのエコシステムがかなり気合が必要で気持ちがなくなってしまったり、 そもそも最近ゲームを楽しめなくなったりしてしまって琴葉姉妹をインストールしたけど全然起動しなくなってしまった人向けの活用方法を紹介します。?
⚡️ 着メロにする これはだれでも思いつく(ほんとうか?)方法なのだがメールの着信音にするとか電話の着信音にするっていう話ですね。喋らせたいボイスを雑に作ってスマホに放り込んで設定するだけなのでかなりお手軽に耳が幸せになるハックですね。 ただ会社とかで琴葉姉妹が喋ると周りの皆さんの目が冷くなったりする職場だと運用に注意したほうがいいかもしれません。 まぁ 愛 でカバーできる猛者なら常にミュートにしなくて問題ないですね。
⏰ 目覚しボイスにする これは上の項目の応用ですね。作り方は同じですね。音源を作ってスマホにぶちこんで目覚し時計アプリで設定するだけですね。 朝の目覚しが美少女の声になるので実質 めざましマネージャー アスナ になって便利ですね。 しかも自分の好きなボイスで起こしてもらえるので無限に夢が膨らんで 便利ですね。 折角だし目覚しアプリごと作ればランダムでボイスを再生したり、その日の天気や時間に応じてボイスを変えたりとかもできるので積極的にプログラミングしていきましょう? おまけなんですけど、exVOICEに「おはよう」といったボイスが存在するので手軽で便利ですね。
♪ Mikutterの効果音を取っかえる Linux向けのTwitterクライアントがあります。このクライアントはふぁぼやRTといった動作の通知音を設定できます。効果音のリソースを琴葉姉妹のボイスに置き替えればいいわけですね。 これであなたもふぁぼられるたびに琴葉姉妹がふぁぼって囁いてきてRTされる度にRetweetって葵ちゃんが囁いてくれて、リプライが飛んでくる度に茜ちゃんが囁いてくれる、まるで楽園みたいなTwitter生活が約束されるというわけですね。やったぜ。
? Scalaのコンパイル終了にフックすることによってコンパイル中にTwitterを見る Scalaのコンパイル遅いですよね。待ってる間にカップラーメンは食べれますし、コマンドの終了をターミナルと睨みっこしながら待ち時間を過すのはシャクという物です。 もっとエキサイトなコーディングライフを送るべきです。
え?Scala書かない? 熟成したRailsProjectのRSpecを全てのパターンで流すと長い時間を有しますよね?。そういったやつです。 コマンドの終了時にVOICEROIDの音声を流すことで、コマンドが終了するまでの時間でTwitterができますね!便利だ。 え?どうやってやるかわからない?以下にfishでの実装例を記述していきます。
~/.config/fish/config.fish function hook_command_end --on-event fish_postexec # MacOSX Sierra set -x success_voice $HOME/Music/success.wav set -x fail_voice $HOME/Music/fail.wav if test $status -eq 0 afplay $success_voice &amp;amp; else afplay $fail_voice &amp;amp; end end これでコマンド成功時に成功の音声を流す、失敗の時は失敗の音声を流す機能の実装ができました。
ただ、これだけだとlsコマンドを実行しただけで琴葉姉妹が喋りだすので、実行時間がある程度長い場合はみたいな分岐を作ったり、再生されるボイスをランダムでピックするように実装したりすると実用性が高い琴葉姉妹になるでしょう
? 小説家になろうを食わせてSS聞きながしする 長文を自分の目で読むのはめんどうですね。大好きな百合SSでも仕事中では摂取できないのはつらいことです。 しかし、このVOICEROID2があれば仕事中に耳から百合を摂取することが可能!</description></item><item><title>alacrittyを使い始めた話</title><link>https://blog.himanoa.net/7/</link><pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/7/</guid><description>普段私はiTerm2の上でNeovimを動かしコードを書き、C-zでVimをバックグラウンドジョブにしてrspecを実行しあとは別のタブで開発用サーバーを動かして、Gitもターミナルから操作していくといったフローで開発している。まぁその辺に転がっているエンジニアでよくありがちな開発スタイルである。が諸処いろいろ問題があったため、iTerm2を卒業することにした。
卒業の決定打になったのは単純にiTerm2の描画速度が遅かったためだ。 私の環境のNeovimで100行のファイルを開いてスクロールするだけでスクロールが引っかかる。これがスクロールだけだったらまだしもひどい時は文字入力ですらひっかかるのでとてもストレスが溜まる仕様になっていた。以下には取ったアプローチを書いていこうと思う
Nyaovim(+NeovimのTerminalEmulator)を試す Electron製のGUINeovimClientである所のhttps://github.com/rhysd/NyaoVim をためした。 描画速度はiTerm2よりは早く中身は普通のNeovimなので操作に困ることなく快適だったのだが、以下の問題に遭遇して使用をやめた。
マルチモニタ環境でMonitor1からMonitor2へウィンドウを移動してリサイズすると表示が壊れる UI stretching with multiple monitors #101 のIssueで報告されているのだがこの通りに壊れる。▽なお直すためにはElectronアプリをリロードするしかないのだが、直前まで起動していたVimごと吹っ飛んでしまうので運用がつらかった。
標準出力の流速が高いと最悪落ちる データベースにたくさんデータ入ったアプリケーションでN+1クエリを走らせて設定ミスで標準出力にたくさんログが流れるとC-cすら受けつけなくなって落ちるみたいなのを日に二回くらいやった。いやまぁアプリケーションのコードを直せよっていう指摘は正しいし実際やるんですけど、まぁそれでも不意の事故でTerminalEmulatorごとVimが落ちるのはちょっとつらいにゃあといった気持ちだった。
Neovim-dot-app(+NeovimのTerminalEmulator)を試す 次にObjC + Cocoa実装のGUINeovimClientを試した。rogual/neovim-dot-app IMEの入力が効かなかったが僕はtyru/eskk.vimのユーザーなのであんまり問題ではなかった。(TerminalModeで日本語入力が効かないのはちょっとつらいんだけど、そもそもターミナル上で日本語打つ機会ってgrepするときだけだと思うし、日本語でgrepするのも稀な機会だよね) まぁTerminl使わなくても頻繁に落ちてしまったのでやめた
そんなこんなでalacritty 描画早くて神で最高といった感じ。IMEが使えないが日本語も表示できるしぼくはNeovimに籠っているのでこれでいいかなといった感覚 DPIが違うマルチモニタでウィンドウを移動するとフォントサイズが壊れるみたいな問題があるけど修正PRがあったのでそのうち直りそう。
iTerm2高機能で便利だけど描画遅いので皆さんもGPUレンダリングを信じてalacrittyを使いましょうまる</description></item><item><title>2017年9月15日 はれ</title><link>https://blog.himanoa.net/4/</link><pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/4/</guid><description>日誌 朝起きて会社に行った。昨日からやけに疲れていたので寝坊を決めてしまって最悪だった。
仕事はまぁ普通に順調だったのだが、昨日振られたタスクが思ったより重めで大変で残業を決めてしまったのだが何とか終わってよかったですねといったところ。
一日中仕事しているとブログに書けることが少なくて辛い。日誌ブログからは方向性変えて行こうか検討している
寝て起きたら北海道に行かなくてはいけないのですが、こんな時間まで起きてて大丈夫なのだろうか。とりあえず空港までの移動時間と飛行機の中では睡眠をしていこうと思う
内定 貰えて10/1から労働することになった。今も労働してる所の内定なので別に特段変わったことは起きない。まぁ給与上がるのでアドですねといった感じ。
正直サレジオ退学してからここまで物事がすんなり行き続けてるのが心配で、そろそろ神様から見放される頃だなぁとか思っててエントリの仕方もあまりにもひどい(メールの名義がひまのあだったり、深夜テンションで自己PR書いたり)ので落ちてもまぁしょうがないよねとか思ってたんだけどすんなり内定取れてしまった。「本当に世の中を舐めて生きてるな」って言われても何も言い返せない人生だなといった感じ。
万に一つの可能性 として実力で選ばれてるんだったら光栄だなぁと思っている。まぁ実力で選ばれたとしても、適当にダラダラ生きてると実力が相対的に無になってしまうので、運で選ばれたとしてもそうでないにしても精進しなければいけないことは変わらないが。
やっていく気持ち Google音声認識API -&amp;gt; ドコモのなんか人っぽい会話できるやつ -&amp;gt; VOICEROID2 -&amp;gt; サウンド再生みたいな雑なあれしたい
&amp;mdash; 数字 (@h1manoa) 2017年9月14日 音声認識で僕の声を文字列にしてドコモのすごいやつに食わせて会話結果みたいな文章を召喚してボイロに食わせて自動再生したいっていう話です
&amp;mdash; 数字 (@h1manoa) 2017年9月14日 みたいなのをやっていきたいなぁって思ってる。とりあえずマイク録音して自分の声だけ抽出する機構を作ってるところ。
ブログもいろいろまだ不完全なので北海道でいろいろ完成させていくつもり</description></item><item><title>2017年9月14日 はれ</title><link>https://blog.himanoa.net/3/</link><pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/3/</guid><description>タイトルが日付だけだとなんか物悲しいので天気とか入れてみる
今日は日付回って昨日から繰り越しスタート。これは10割くらい僕の過失なんですけど前日に就職活動面接が突如今日に決まってしまい、まだ何も書いてない職務経歴書と履歴書を書いていた。といってもかなりダラダラ書いていたもので、ニコニコで実況動画を見てたりも普通にしていた。ボイロ実況は神
4:00位に一旦寝て9:30くらいから電車乗っていく気持ち感でやっていくつもりだったのだが履歴書書いたのはいいけど証明写真取ってなかったので乗り換える駅でついでに取った。
んで普通に仕事して合間で履歴書を印刷しに行くぞという気持ちになったので、社内のプリンターを使おうと思ったのだがなんかアカウント必要っぽくて作っていい物かわからなかったので放置してセブンイレブンのプリンターでスマホから雑に印刷した。
面接は普通に話しをしただけだったのでどういう方向性に決まったのかわからん。世の就活大学生は面接官の気持ちを忖度していって自分の合否を大体予想できるっぽくて本当にすごいなぁって思う
あと、なんか今日一日体調が優れなくて吐き気と戦いながら仕事をしていた。便も赤くて調子悪そうだったので皆さんも毎日おやつカルパスを10~20個食べて仕事する癖は付けないように気をつけましょう。体も壊れるし何しろ太るので…</description></item><item><title>2017年9月13日</title><link>https://blog.himanoa.net/2/</link><pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/2/</guid><description>このサイト himanoa/ikkiikki - https://himanoa.com
半年前にブログ作るぞ！！！って気持ちになって5日くらいかけて飽きてやめたやつを一週間位作りこんでデプロイした。
なんで作ったかというと、半年前は職場でRails使うしやっていくぞといった気持ちだったんだけど一瞬で飽きてしまった凍結。(仕事が忙しくて趣味の時間は友達との交友以外は寝るかボイロ実況見るしかやってなかったと思う)
んで、今はどういうモチベーションで動いてるかっていうと 職のプロダクトって雑に試したいGem突っこんで外してみたいなのができなくて外部Gem依存を外して無理矢理実装しがちになってしまうんだけど、これってかなり保守的観点からしてよくないのは自明だし、かといって雑に職場のプロダクトにGemだったりをガシガシ入れてくのも失敗した時にマジで鬱病になるのでsandbox的に遊べるプロダクトが欲しかった。それだけ。
とりあえず知見の放出とか日記とか適当に書いて運用していく感覚でやっていくのでゆるやかに見守ってくれるとうれしいですまる (飽きたらDBとかVPSの構成とかごと消える)
space-pirates-llc/style-guideContribute to style-guide development by creating an account on GitHub.
のrails-templateに乗って開発スタートした。ただgulp倒したかったりwebpackerに乗りたい気持ちが出てるのでそういう所をやっていきたいなぁって思っている
JavaScriptを今全く使ってない状態なのでMarkdownがレンダリングされなくてこわいなぁって思いながらブログを執筆している。(くそざこ
デプロイとかプロビジョニングとか色々書きたいことが山のように高く積っているのだがそのうち書こうと思う
TODO React ReduxでいいかんじSPA管理画面 ↑を実現するためのAPIと認証の実装 シェアボタンがなんかおかしいので修正 デザイン詰めるぞ2018 SEOとか？なんかそこまで気合入れてブログ書く？みたいな気持ちがあってアーですね デプロイフローの見直しとか RSS sidekiqのjobが死んでるのでそれの修正とか 今日 2017年9月13日ですね。2017年9月13日といえば何もない普通の日ですね。
昨日の深夜から朝にかけてデプロイ作業をして2hか3h寝て出社しました。
帰ってきたら飯があるので便利なんですけど、それは置いといてフォロワーが結婚してたりしてびっくり。もうそんな経験する年数Twitterやってるんですねみたいな気持ちになった。幸せになってくれ
追伸 Windowsで見たらフォントサイズがボロボロだったのでWebフォント入れたりして工夫したい気持ち</description></item><item><title>ブログはじめました</title><link>https://blog.himanoa.net/1/</link><pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.himanoa.net/1/</guid><description> なんかドメイン切れたりしてでモチベ切れてしまって手を付けてなかったんですけど、ブログ書きたくなったのではじめました報告です。
人間</description></item></channel></rss>