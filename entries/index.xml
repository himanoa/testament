<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Entries - 遺言書</title>
    <link>https://blog.himanoa.net/entries/</link>
    <description>Recent content in Entries on 遺言書</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 11 Sep 2019 22:29:02 +0900</lastBuildDate>
    
        <atom:link href="https://blog.himanoa.net/entries/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MHWで効率良くクラウンをコンプしたい</title>
      <link>https://blog.himanoa.net/entries/51/</link>
      <pubDate>Wed, 11 Sep 2019 22:29:02 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/entries/51/</guid>
      <description>モンスターハンターワールドで効率よく金冠をコンプしたい</description>
    </item><item>
      <title>gitをより便利にするsubcommand集を作った</title>
      <link>https://blog.himanoa.net/entries/50/</link>
      <pubDate>Tue, 10 Sep 2019 02:19:08 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/entries/50/</guid>
      <description>gitにはsubcommandという仕組みが存在していて、パスが通ったディレクトリに+xなgit-xxxファイルを置いておくと、git xxx で呼び出せる仕組みが存在します
具体例を上げると ~/bin/ にパスが通ってるとして、~/bin/git-wip が存在したなら 任意のgitディレクトリで git wip で ~/bin/git-wip が呼び出せます。
さもgitのpluginのような顔をしていますが、別にプラグインだから専用のAPIにアクセスできるみたいなことはありません。
個人的にはgitの操作で結構ワンライナーでかけるけど毎回書くのに気合が必要なやつをラップするコマンドをサブコマンドとして管理すると便利だったりします。
たとえばリポジトリ内でgrepした結果を置換する git grep -l Foo | xargs sed -i &#39;&#39; -e &amp;quot;/Foo/Bar/g&amp;quot; をサブコマンドとして実装するとかです。
やっと本題に戻りますが、これらのサブコマンド集を実装してリポジトリとして公開しました! himanoa/git-subcommands
インストール himanoa/git-subcommands は以下のツールに依存しています。
 bash python  3.x推奨  git   git clone https://github.com/himanoa/git-subcommands ~/git-subcommands PATHを ~/git-subcommands/src に通す  zshとかbashを使っているなら export PATH=~/git-subcommands/src:$PATH とかでいいのでは？   インストールが完了したら以下のセクションのサブコマンドがそれぞれ動作できるようになるはずです！
実装したコマンド git-replace リポジトリ内の特定の文字列を置換する いつも git gre -l Foo | xargs sed -i &#39;&#39; -e &amp;quot;/Foo/Bar/&amp;quot; とか書いてた実装ですね。これをこのサブコマンドを用いることで以下のスニペットまで短縮できます</description>
    </item><item>
      <title>RSSリーダーとの付き合い方</title>
      <link>https://blog.himanoa.net/entries/49/</link>
      <pubDate>Sat, 07 Sep 2019 02:19:36 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/entries/49/</guid>
      <description> この記事はどうやって普段RSSリーダーを運用して情報を収集しているのかを言語化したものです
使っているRSSリーダー 今使っているのはFeedlyだが、 正直何でもいいと思う。ただ、以下の特徴を抑えてるリーダーがあると便利。
 クラウド同期  どこまでフィードに既読をつけたかなどをデバイス間で自動同期してくれる  フィードのグループ化 あとで見る  feedlyには備え付けられているけどTwitterで流れてきて後で見たいリンクなども一元管理したいため、Pocketを使っている   feedlyもベターではあるがベストではない感じがしていて、また自作したいなと考えている。とはいえ、巡回どうするかとか面倒見なくちゃいけない物が多くてなんとなく優先度低い
今まで使っていたツールの遍歴  Opera feedly Slack nadeshiko  YQLが爆発して動かなくなった  feedly  運用方法 以下のライフサイクルで運用している。閲覧できなかった物に関しては縁がなかったということで既読つけてる。
 朝起きてfeedlyを見て気になる記事をPocketのあとで見るに突っ込んでおく  寝坊した時は出社して余裕がある時間に眺める 時間の許す限りやる。見れなかった情報に関してはスルーする  風呂入ってる時とか寝落ちするまでの間にスマートフォンでPocketに突っ込んだやつを読んでいく  今後やりたいこと: Pocketに突っ込んだ記事だけ選定してブログに自動でポストしてニュースフィードみたいにしたら便利かも  週の終わりに見れなかった情報を全部既読つける  今後やりたいこと: crontab回して自動で既読つけたい   </description>
    </item><item>
      <title>monaco-editorをwebpackでバンドルする</title>
      <link>https://blog.himanoa.net/entries/48/</link>
      <pubDate>Mon, 22 Jul 2019 06:48:01 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/entries/48/</guid>
      <description>問題 monaco-editorを以下のようなloader設定とplugin設定でバンドルしようとしたらハマった。
const path = require(&#39;path&#39;) const config = { externals: [&amp;quot;electron&amp;quot;], target: &amp;quot;electron-renderer&amp;quot;, entry: &amp;quot;./src/renderer/index.tsx&amp;quot;, plugins: [], //←重要, output: { path: path.join(__dirname, &amp;quot;dist&amp;quot;), filename: &amp;quot;renderer.js&amp;quot; }, module: { rules: [ //←重要 { test: /.tsx$/, exclude: /node_modules/, loader: &amp;quot;babel-loader&amp;quot; }, ] } } module.exports = config  エラー内容はこんなかんじで 下部分で重要そうな問題だけコピペしてきた
 ERROR in ./node_modules/monaco-editor/esm/vs/editor/contrib/find/findWidget.css 8:0 Module parse failed: Unexpected token (8:0) You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file.</description>
    </item><item>
      <title>pre-orderで走破する木構造を書いた</title>
      <link>https://blog.himanoa.net/entries/47/</link>
      <pubDate>Sat, 20 Jul 2019 19:27:08 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/entries/47/</guid>
      <description>動機 人はまれに木構造を書きたくなるときがあって、ついにそれを発症したので植林活動に手を染めてみることにしました。
嘘です。本当は某所でビヘイビアツリーなるものを知ってしまったので、原理を知るために実装したかった。
最近 lintとかtypescriptとかでASTでなんやかんやするの流行ってるし木を自作できたらいろいろ幅が聞くだろうなぁ（妄想）と思って木構造と走破するやつをつくった。
実装 https://github.com/himanoa-sandbox/hayashi/commit/a165b76b773edc699fb5d2a53d947e9afae3a9bc
意識したこと  こういうシンプルなやつはTDDの素振りに良いので意識しながら書いた  commitには現れてないけどイテレータープロトコルを満たす普通の関数で最初書いてた ジェネレーターで書き直したくなった。 このときにテストがあったので壊さずリファクタリングできた。  ハマったときはgistに投げてTwitterで助けを求めた  しかし だれも こなかった。 自分を信じて自分でなおしました 俺は神   感想した感想 たのしかったです！（幼稚園生並感)。ていうか走破処理ってこんなに短くかけるものだったのね。もっと複雑でだるいものかとおもってたわ
leftとrightがあるし実質北上双葉。双葉の双葉はどーれだ</description>
    </item>
  </channel>
</rss>