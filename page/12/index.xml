<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>遺言書</title>
    <link>https://blog.himanoa.net/</link>
    <description>Recent content on 遺言書</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://blog.himanoa.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ThinkPadX1Carbon 5th にUbuntu17.10を入れる</title>
      <link>https://blog.himanoa.net/10/</link>
      <pubDate>Tue, 05 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/10/</guid>
      <description>情報が散らばっててたので作業ログをまとめます。最近まとめブログみたいなことしかしてないなこれ。
セキュアブート無効化 Windowsをセットアップして再起動したらコントロールパネルを開き、&amp;lt;ハードウェアとサウンド&amp;gt;→&amp;lt;電源プランの選択&amp;gt;から、高速スタートアップを有効にする(推奨)のチェックを外す。(非アクティブ状態の場合は詳細情報をクリックするといじれるようになると思います
Ubuntu USBブート後 トラックパッドが効かなくてカーソルの操作ができないと思うのでできるようにします。
Winキー押してterminalと入力してEnterを押すとTerminal Emulatorが開くので以下のコマンドを手で入力して実行します
sudo modprobe -r psmousesudo modprobe psmouse proto=impsトラックポイントが操作できるようになると思うのであとは普通にインストール
インストール終了後のSSDからの再起動後 ログイン画面で歯車マークをクリックしUbuntu on Xorgを選択する。 Ubuntu 17.10からWaylandが採用されたが日本語入力が不可能なのとバグが多数あるためとりあえず無効化しておく
grub.cfgを弄ってトラックパッドが効くようにする インストール時は無理やりなんとかしたが、このままだと起動するたびに上記のコマンドでトラックポイントの有効化をしないといけない。 それはだるいので、ブートローダーの設定を弄って解決する。
以下のコマンドを実行
sudo vim /etc/default/grub
１１行目を以下に書き換え
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash psmouse.proto=imps
書き換えたらgrubのconfigを適用させたいので sudo update-grub を実行する
ホームディレクトリのディレクトリ名の英語化 LANG=C xdg-user-dirs-gtk-update</description>
    </item><item>
      <title>ぱくとまのブログから学ぶぱくとまの歴史</title>
      <link>https://blog.himanoa.net/9/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/9/</guid>
      <description>先行はもらった！この記事はぱくとまアドベントカレンダーの記事です。まだまだ枠が開いてるので各位どんどん埋めてってくれ。二週目もあるぞ！
んで、例年（2年目）なんですけど内容は全くぱくとまについて掠りすらしてない楽しいエントリーで溢れてるんですが、当日までにぱくとま以外のネタを用意できなかったので、今年はぱくとまについて書こうと思います。
ぱくとまおもしろポイントとしてはやはりブログですね。今年と去年で自分のブログを3回書き直した人としてはここに触れていきたい。
というわけで、僕が独自に面白かった記事をまとめていきます。引用してツイートするときに便利したり各位で有効活用してくれ。
後期中間テスト https://pakutoma.pw/?page=45
爆死した悲壮感があって趣がありますね。最近滅多に本人の口からでなくなった気がしますが、ぱくとまといえば「めう」といった感覚が思い出せていい感じですね（めうファンに殺されそう）
メリットのある退学か否か https://pakutoma.pw/?page=47
タイトルの字面が神
ブログ書いたよ https://pakutoma.pw/?page=2
人生って何なのかな https://pakutoma.pw/?page=3
人生について悟りを開いたと思ったら死にました。
ひゃっほう https://pakutoma.pw/?page=8
掘り返すと便利
CSS更新♪ https://pakutoma.pw/?page=17
最近我々こういう♪みたいな文字列を使わなくなりましたね。絵文字は多様するが。こう、古きインターネット感を尊重しろ
かのんはクソ https://pakutoma.pw/?page=63
僕のブログ記事を引用するのをやめろ https://pakutoma.pw/?page=67
この記事だけ開くと失明するんですけど
バイトを始めた https://pakutoma.pw/?page=68
吉野家
ゆるして https://pakutoma.pw/?page=70
ぱくとまが炎上した話ですね。この話、炎上したことは知ってるんですけど詳しく知らないんですよね誰か詳細求む
モテないオタクとクソネット恋愛 [https://pakutoma.pw/?page=82](https://pakutoma.pw/?page=82]
タイトルの字面がやばいんですけど、ぱくとまがネット恋愛していた頃の記事ですね。僕は経験がないのでわからないのですがネット恋愛だけはしてはいけないということがわかりました。最後の「姫を囲ってる方がずっと幸せです」はオタク各位に刺さりそうですね。
今のひねくれを続けてるのと姫を囲うのとではどっちが幸せだったか、結構難しいテーマだと思います
衝撃！某牛丼店で一番多い質問とは！？ https://pakutoma.pw/?page=89
アタマでしょの始まりだったと思います。多分
留年したくない https://pakutoma.pw/?page=91
退学
とりとめのない思考 https://pakutoma.pw/?page=92
脳内のコアダンプって言葉好き
幸せについて https://pakutoma.pw/?page=106
なんかこの人エモいこといってっるーーーーー
新人教育についての悩みの話 https://pakutoma.pw/?page=113
僕この記事で初めて知ったんですけど、ぱくとまブログの本文ってセマンティクス存在したんですね。 内容は僕にはわからなかったです。なぜなら人の上にたったことがないため
BEMYBABY https://pakutoma.pw/?page=117
最近めっきり見なくなりましたね。この頃だったと思うんですけど、アプリケーションのテストデータにぱくとまの顔使うの、ちょっと好きでした。
オープンソースという思想が欺瞞だったのだ https://pakutoma.pw/?page=120
禁酒(12月まで) https://pakutoma.pw/?page=132
だめでした
総括 ぱくとまって意外とブログ書いててすごいなって思いました。僕とかは作って放置してシステムごと爆破なんていつもやってるのでそういう姿勢を見習っていきたいですね。
定番のやつ 明日は圧倒的コンテンツ力を誇る張本人@pakutomaさんです。酒のことについて書くらしいので楽しみにしましょう。僕は未成年なので酒呑めないんですけどね！</description>
    </item><item>
      <title>近況報告</title>
      <link>https://blog.himanoa.net/8/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/8/</guid>
      <description>最近思ったけどTwitterに書かなかったこととか、先月 + 今月あったこととかまとめようと思う
日報を付け始めた https://nippo.wikihub.io/
会社で日報を付けてたんだけど結構よかったので私用でも始めて見ることにした。(会社での日報は誰も見てくれてなさそうみたいな気持ちがあって挫折してしまったが)
WikiHubで日報書くのは結構楽しく、特に良さげなのは日報書いた翌日に自分の日報に対してemojiが付くのが良い。書いた文章を誰かしらが見てくれてるんだなぁっていうのは次も書いていくぞっていうモチベーションに繋る。
あとは他人の日報を見るのが思ったより楽しいというところですね。他人の生活を覗くのって結構新鮮で小学校の時に交換日記とかやってた人はこういうのを味わっていたのかぁって思った。インターネットが普及した今こそ見知らぬだれかと交換日記するのも楽しいかもしれませんね。書いてて思ったんですけどこれどうぶつの森のメッセージボトルっぽいですね。あれも楽しかった。
Markdownの見出しって#打つの結構辛くない? Shift + 3って結構押しにくいと思うんですよね。僕は左薬指と左中指で押してるんですけど左の薬指が破壊されそうな曲り方してるので心配です。と思ったんですけどSKKバリバリ使う都合上、「英数」キーにShiftを割り当ててたんでこいつを使ってShift押せば過労が減りますね。完全に便利だ。
引っ越しの準備 社会人になって半年位立っていてそろそろお金も貯まってきたのと、片道2h30mの通勤が死ぬほど辛くなってきたので引っ越すことにしてて、引越す準備をしていた。 もう住む家も決まってて契約も済んで今日は新居で使う家具だとか食器だとかを親と買い漁っていた。
一人暮スキルみたいなのが何もないので引っ越してから生きていけるかそれなりに不安もあるんだけど、やっぱり親との依存関係を切り離せるのは一人の人間としての喜びがある。あとは抱き枕カバーとかも解禁って考えると気持ちが高まってくるよね。
人生設計の中で20歳になるまでに親元から離れるっていう目標があったので達成できたのでよかった。
Haskell入門を買った Haskell入門 関数型プログラミング言語の基礎と実践 | 本間 雅洋, 類地 孝介, 逢坂 時響 |本 | 通販 | Amazon を買いました。最近忙しいから読書ペース落ちてて今は3章の終わりまで読んだ。Haskellおもしろいなぁって思うんですけどやっぱり今までやってきた言語の用語と被ってるが意味違う用語とかが結構おおくて、その辺りのコンテキストスイッチングに時間掛ってたりだとか、新しい概念をなんとなく理解するのに結構時間かかったりしていて、3年前とかに比べて脳味噌が腐ったというか、老化を感じた。19歳でこんなだし30歳とかになるころには廃人同然の体っぽそうですよね。
はやくHaskellで実用的なプログラミングをしてみたいなって感じがするんですが、結構ピーキーな言語な気がしていて、このじゃじゃ馬を乗りこなすことができるかっていうと結構怪しいし手腕が求められているなぁと
半年間働いて見ての感想 TL; DR 卒業当初より思ったより仕事が出来ている感じかなぁといった感じ。新人研修を全く受けずに仕事してたんですけど思ったより様になってたと思う よくもわるくもまぁこんなものかなって感じ。世の中の学生エンジニアは社会に対する期待がかなり高いと思うのでその辺の値は下げといた方が無難ですよ。感がつよい あともっとつよくなりたい
まぁそれだけ書いてもあっさりした感想だなぁ。で終わると思うので諸処思ったこととかを記述することにする
自分のレベル感とか 半年間働いてみてなんとなく立ち位置がぼんやりと見えてきたといったところで、どれくらいかというと高くも低くもないといった感じだと思う。最近業務委託からのアップグレード入社を決めたんだけど、そんときに言われたのは「会社に直接コミットできるほどの力がないのでまずはチームにコミットすることを考えてくれ」だ。まぁそれくらいの力が自分でも妥当なのかなって気持ちです
まぁ働いてると他人の書いたコードを見た時に「グワーっ」ってなることもまぁそれなりにあるので、そういうレート帯にいるんじゃないんですかね。取り柄とかもないので精進あるのみ
やりがい 今いるチームでやっていくことでレベルで学びがあって自分のパワーが上昇するかというと正直わからない。ただプロダクション環境で重いクエリが走るとマジでDBがやばいことになるっていう体験は始めて(そこまでデータ量が入ったSQLで遊ぶの意)なので、自分が書いてるコードでどんなクエリが発行されてどれくらい実行時間がかかるのかとか、このテーブルにはどれくらいのデータが入ってくるか見積って愚直にコード書いても大丈夫かを見極めたりするのは新鮮で楽しい。
今やってるやつが落ちついたら微妙な開発環境を整えたりしたいなぁみたいな夢もまぁあるので、まだ仕事を楽しんでる部類の人間にカテゴライズされるんじゃないかなぁ多分。といったところ。
悪い点を上げてくと、やっぱり今自分が作ってるプロダクトに対して愛情が持てないのでそういったところですね。こうプロダクトに対してこれをよくしていくぞっていうよりかは金が貰えてるのでプログラミングしているっていう気持ちが強い。まぁ愛がなくてもコードは書けるので書いていくんですけど、やっぱり自分が開発するプロダクトなら自分が好きな物に対してバリューを提供していきたいって気持ちは強いし憧れがある。
あと職場が快適なのがいいですね。
つらみ 仕事のつらみなんですけど色々あって、ビジネス的正しさと技術的な正しさの間みたいなのがつらいですね。僕は基本的に技術的に正しいのが好きなんですけど、納期とか僕の力不足とかモロモロあってその辺りを崩さざるえないことがおおくてつらい。
あと納期とか考えるとすぐリファクタリングするみたいなのができないのもつらいですね。人々の祈りのスタックが溢れていく
あとは自分の力不足に起因することがおおいのがつらいですね。 Twitterとかでもそうなんですけど僕って基本的にコンテキスト依存の会話に慣れてしまってて社会で必要になるゼロベースでの説明みたいなのがすごい苦手でつらいし、かなり避けては通れなさそうで仕事するの下手だなぁって気持ちになる。
自分の限界が見えたなぁって気もしていて、まじで強い人(去年通ってたカルチャースクールの講師など)を見ていると一生追いつける気がしないなとも思っててそこら辺りが僕の限界点なんだろうなぁと思うと途端にプログラマとして労働するのに向いてない気がしてくるし、プログラマとして生きていくのをやめようって気持ちがグワーーーーッってなり最悪人が死ぬのだが、かといって自分が今から他のスキルセットに切りかえてやっていけるかというとそんな気もしないので人生八方塞がりですね?みたいな気持ちになって死ぬ。
その他すべての世界観でのつらみ やっぱり就職してから世界が変わったしそれにともなってつらみも増えたなって感覚。 勝負する世界が変わったのが一番でかいかなぁってかんじ。1~3歳僕よりも長く生きてる人と技術的勝負をしてかないと生きていけない世界に放り込まれた気がする。今まで以上にやっていきを決めていかないと生きていけない世界
あとは同期になったオタクの@potato4dとか見てると登壇実績とかバリバリあるし仕事もバリバリしてるしまじですごいよなぁって思う。僕とかが同じ土俵で話していい人物なのか時々疑問に思ったりして心が死ぬ。
比較すると僕は虚無で実績とかも無で親のキャッシュと様々な人々の気持ちに生かされてる人間に過ぎないんだなぁって実感が湧いてくるのと、これからも人々のお気持ちを集積して、希望と絶望の間でスルメイカを食いながら孤独死するんだろうなぁって考えると生きる気持ちがなくなってくる。
最近プログラミングも本腰入れて楽しめなくなってきてて、実績作らなきゃいけない危機感と生きていくための力を付けるためっていう目的が大きくなってきていて、楽しさより辛さが上回ってきている。あとやりたいことキューがたまってきてて、消化できる時間が少なくなった。こいつは引っ越せば解決する問題だと思うのでもう少しの我慢
ゲームも下手になってきてて最近ほんとうにやる気がでない。最近まで界隈で流行ってるゲームとしてPUBGをやってたんですけど、自分が地雷な立ち回りしてるっていう自覚を持ちながらゲームするのって本当につらいしストレス溜る。 地力上げるためにソロで練習したりとかもしてるんですけど、まったく上達しないストレスが募ってアンインストールしてしまった。何もできないし続かない自分にイライラする日常から解放されたいし早くこの地獄のような世の中から解放されて、来世は石とかがいいですね。</description>
    </item><item>
      <title>動画を作らない人のための琴葉姉妹活用法</title>
      <link>https://blog.himanoa.net/6/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/6/</guid>
      <description>VOICEROID2 琴葉 茜・葵を買って実況動画を作るぞ!!!!!!!!!!!!!!!! という気持ちになったのはいいんですが、動画制作周りのエコシステムがかなり気合が必要で気持ちがなくなってしまったり、 そもそも最近ゲームを楽しめなくなったりしてしまって琴葉姉妹をインストールしたけど全然起動しなくなってしまった人向けの活用方法を紹介します。?
⚡️ 着メロにする これはだれでも思いつく(ほんとうか?)方法なのだがメールの着信音にするとか電話の着信音にするっていう話ですね。喋らせたいボイスを雑に作ってスマホに放り込んで設定するだけなのでかなりお手軽に耳が幸せになるハックですね。 ただ会社とかで琴葉姉妹が喋ると周りの皆さんの目が冷くなったりする職場だと運用に注意したほうがいいかもしれません。 まぁ 愛 でカバーできる猛者なら常にミュートにしなくて問題ないですね。
⏰ 目覚しボイスにする これは上の項目の応用ですね。作り方は同じですね。音源を作ってスマホにぶちこんで目覚し時計アプリで設定するだけですね。 朝の目覚しが美少女の声になるので実質 めざましマネージャー アスナ になって便利ですね。 しかも自分の好きなボイスで起こしてもらえるので無限に夢が膨らんで 便利ですね。 折角だし目覚しアプリごと作ればランダムでボイスを再生したり、その日の天気や時間に応じてボイスを変えたりとかもできるので積極的にプログラミングしていきましょう? おまけなんですけど、exVOICEに「おはよう」といったボイスが存在するので手軽で便利ですね。
♪ Mikutterの効果音を取っかえる Linux向けのTwitterクライアントがあります。このクライアントはふぁぼやRTといった動作の通知音を設定できます。効果音のリソースを琴葉姉妹のボイスに置き替えればいいわけですね。 これであなたもふぁぼられるたびに琴葉姉妹がふぁぼって囁いてきてRTされる度にRetweetって葵ちゃんが囁いてくれて、リプライが飛んでくる度に茜ちゃんが囁いてくれる、まるで楽園みたいなTwitter生活が約束されるというわけですね。やったぜ。
? Scalaのコンパイル終了にフックすることによってコンパイル中にTwitterを見る Scalaのコンパイル遅いですよね。待ってる間にカップラーメンは食べれますし、コマンドの終了をターミナルと睨みっこしながら待ち時間を過すのはシャクという物です。 もっとエキサイトなコーディングライフを送るべきです。
え?Scala書かない? 熟成したRailsProjectのRSpecを全てのパターンで流すと長い時間を有しますよね?。そういったやつです。 コマンドの終了時にVOICEROIDの音声を流すことで、コマンドが終了するまでの時間でTwitterができますね!便利だ。 え?どうやってやるかわからない?以下にfishでの実装例を記述していきます。
~/.config/fish/config.fishfunction hook_command_end --on-event fish_postexec# MacOSX Sierraset -x success_voice $HOME/Music/success.wavset -x fail_voice $HOME/Music/fail.wavif test $status -eq 0afplay $success_voice &amp;amp;elseafplay $fail_voice &amp;amp;endend これでコマンド成功時に成功の音声を流す、失敗の時は失敗の音声を流す機能の実装ができました。
ただ、これだけだとlsコマンドを実行しただけで琴葉姉妹が喋りだすので、実行時間がある程度長い場合はみたいな分岐を作ったり、再生されるボイスをランダムでピックするように実装したりすると実用性が高い琴葉姉妹になるでしょう
? 小説家になろうを食わせてSS聞きながしする 長文を自分の目で読むのはめんどうですね。大好きな百合SSでも仕事中では摂取できないのはつらいことです。 しかし、このVOICEROID2があれば仕事中に耳から百合を摂取することが可能!</description>
    </item><item>
      <title>alacrittyを使い始めた話</title>
      <link>https://blog.himanoa.net/7/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/7/</guid>
      <description>普段私はiTerm2の上でNeovimを動かしコードを書き、C-zでVimをバックグラウンドジョブにしてrspecを実行しあとは別のタブで開発用サーバーを動かして、Gitもターミナルから操作していくといったフローで開発している。まぁその辺に転がっているエンジニアでよくありがちな開発スタイルである。が諸処いろいろ問題があったため、iTerm2を卒業することにした。
卒業の決定打になったのは単純にiTerm2の描画速度が遅かったためだ。 私の環境のNeovimで100行のファイルを開いてスクロールするだけでスクロールが引っかかる。これがスクロールだけだったらまだしもひどい時は文字入力ですらひっかかるのでとてもストレスが溜まる仕様になっていた。以下には取ったアプローチを書いていこうと思う
Nyaovim(+NeovimのTerminalEmulator)を試す Electron製のGUINeovimClientである所のhttps://github.com/rhysd/NyaoVim をためした。 描画速度はiTerm2よりは早く中身は普通のNeovimなので操作に困ることなく快適だったのだが、以下の問題に遭遇して使用をやめた。
マルチモニタ環境でMonitor1からMonitor2へウィンドウを移動してリサイズすると表示が壊れる UI stretching with multiple monitors #101 のIssueで報告されているのだがこの通りに壊れる。▽なお直すためにはElectronアプリをリロードするしかないのだが、直前まで起動していたVimごと吹っ飛んでしまうので運用がつらかった。
標準出力の流速が高いと最悪落ちる データベースにたくさんデータ入ったアプリケーションでN+1クエリを走らせて設定ミスで標準出力にたくさんログが流れるとC-cすら受けつけなくなって落ちるみたいなのを日に二回くらいやった。いやまぁアプリケーションのコードを直せよっていう指摘は正しいし実際やるんですけど、まぁそれでも不意の事故でTerminalEmulatorごとVimが落ちるのはちょっとつらいにゃあといった気持ちだった。
Neovim-dot-app(+NeovimのTerminalEmulator)を試す 次にObjC + Cocoa実装のGUINeovimClientを試した。rogual/neovim-dot-app IMEの入力が効かなかったが僕はtyru/eskk.vimのユーザーなのであんまり問題ではなかった。(TerminalModeで日本語入力が効かないのはちょっとつらいんだけど、そもそもターミナル上で日本語打つ機会ってgrepするときだけだと思うし、日本語でgrepするのも稀な機会だよね) まぁTerminl使わなくても頻繁に落ちてしまったのでやめた
そんなこんなでalacritty 描画早くて神で最高といった感じ。IMEが使えないが日本語も表示できるしぼくはNeovimに籠っているのでこれでいいかなといった感覚 DPIが違うマルチモニタでウィンドウを移動するとフォントサイズが壊れるみたいな問題があるけど修正PRがあったのでそのうち直りそう。
iTerm2高機能で便利だけど描画遅いので皆さんもGPUレンダリングを信じてalacrittyを使いましょうまる</description>
    </item>
  </channel>
</rss>