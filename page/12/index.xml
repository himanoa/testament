<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>遺言書</title>
    <link>https://blog.himanoa.net/</link>
    <description>Recent content on 遺言書</description>
    <generator>Hugo -- gohugo.io</generator>
    
        <atom:link href="https://blog.himanoa.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Python &#43; Firebase RealtimeDBでDiscordBotを作った感想</title>
      <link>https://blog.himanoa.net/31/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/31/</guid>
      <description>これの話です。
これの裏側はPython3.6 + Firebase RealtimeDB + GAE(Flexible Enviroment)になっています。
今回はRealtime Databsaeを使った感想について書いていきます
そもそもなぜReatimeDBを？ 人間がデプロイしないで自分のサーバーに追加できるDiscordBotを組みたかったので何かしらに永続化する必要がある。 RDBMSで何か遊ぶことには慣れてるので、本当はRDBMSを使いたかったのだが、無料で使える or もしくはコスパがよろしいプランが存在しなかったので、NosqlなFirebase Realtime DBを採用したみたいな経緯でした。
よかった話 安い 日のデータ通信量がわかれば月のデータ通信量もなんとなくわかるのでわかるんですが、安いのは個人のホビーとしてはポイントがたかい。 僕のユースケースだと無料枠に収まりそうなのでよかった
見えるものが動くまでのサイクルがはやい。 テーブル設計しなくても適当にDatabaseに実データが入れられたり、リアルタイム同期してくれるため動くものを作るまでのサイクルはめちゃくちゃ簡略化できる。
しんどかった話 flattenなスキーマ設計 RealtimeDBはスキーマレスだが開発を効率的にやるためにはやはりスキーマはあったほうがいいと思っているのでアプリケーションコード上でやった。 RealtimeDBはあるテーブルのデータを一覧で取得してくるとその子要素も全部取得してしまうため、データが増えてくるとpayloadは巨大化するしコストも増えていくので、flattenに設計していく必要があるのだがそうすると今度は削除や書き込み時に複数のエンドポイントを更新しないといけなくなるため、漏れが発生するとすぐに破綻するのが大変だった。
そもそもFirestoreを選定しなかった理由 まだベータ版だったのと良さげなAPIClientがなかったため今回は敬遠した。が今度試してみたいですね</description>
    </item><item>
      <title>Hearthstoneランク15いった</title>
      <link>https://blog.himanoa.net/30/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/30/</guid>
      <description>初心者を脱したのでよかったですね。
滑りこめたのでよかった。月末は弱い人がおおいきがする。最高16で16~18をいったり来たりしてたんだがたまたま、奇数パラがメタと噛みあって連勝ボーナス混みで4-1(記憶ちがいあるかも)で15はいった。
今月主に回してたデッキは 奇数パラディン 奇数ローグ ミラクルローグ で途中9連敗を二回したりでマウス投げたりしてたがまぁ自己ベスト更新できてよかったですね、みたいなところ。このランク帯までは、デッキパワーたかいデッキでメタが噛みあってる時間帯にどれだけしゃぶり尽せるかみたいなところなのでデッキパワーつよいデッキを使えるかみたいなのがでかいとおもう。</description>
    </item><item>
      <title>ストレスコントロール</title>
      <link>https://blog.himanoa.net/29/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/29/</guid>
      <description>単純に苦手。
負な出来事が起こると愚直に不安にもなるしストレスが来るし何しろイライラするし機嫌もわるくなる
今日もハースで9連敗した</description>
    </item><item>
      <title>意図しないターゲットに対してバズった時にどこまでサポートするか</title>
      <link>https://blog.himanoa.net/28/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/28/</guid>
      <description>これからネタプロダクトで一発当てる(ここでの一発当てるはTwitterでRTされてチヤホヤされるの意)のを狙ってる人向けの個人の見解です。</description>
    </item><item>
      <title>明日から会話で使えるさなボタン</title>
      <link>https://blog.himanoa.net/27/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.himanoa.net/27/</guid>
      <description>この記事は名取さなアドベントカレンダー-149日目の記事です。
毎日昼夜問わず さなボタンをクリックし続けるせんせえがたの皆さん、お元気でしょうか？
私は
を作り身内鯖のDiscordにデプロイしてみんなでさなボタンで会話したり辞世の苦(575)を詠んだりなど楽しくやっております。
今回は、身内鯖での研究の成果として 明日から会話で使えるさなボタンと称し、汎用性の高いフレーズだけ取り上げていきたいと思います。
笑い声、あいあい、てね、ややや うんうん 各種 人間との会話において相槌を打つという行為は非常に重要な役割を持っていることは自明だと思います。
そんな相槌を254 パターンものバリエーションで収録されているので、会話が続かない無口なせんせえがたでもボタンを何時もの通り押してるだけで会話として成立することができます。行動を起こさなくても相槌が打てる便利な世の中になっており完全に2018年は最高ですね。
ありますねぇ！ 任意の事象があるときに使えます。中身のない会話をするときに無限の利便性を誇ります
承知致しました,確認させて頂きます,ご検討ください ビジネスシーンでも活躍しているフレーズで、この語録の登場はビジネスシーンの会話でもさなボタンが使えることが証明されたことを意味します
おはようございなーす01-16 朝の挨拶に使えますね。皆さんも朝は常に咄嗟のタイミングで曲り角で食パン咥えた女子高生と衝突しても咄嗟に出せるように咄嗟に出す練習をしましょう。
うそです 嘘付いたときに使えますね。めちゃかわいいボイスなので相手も嘘を許してくれるでしょう。GTAなら押した途端に手配度が下りそうですね
すこだ,すこすこ 好きな物を見た、きいた時に咄嗟に出せるようにこちらも要練習なボタンです
わかんないけど01(つぎ),02(ありがとう) わかんないけど話を進めたい時や礼を言いたい時に使えますね
今の無し警察 失言を取り消したいときとかに咄嗟に出すと役割が持てますね。ツイートを消した時にセットで押したいボタンです
マ？ もはや自明の汎用性、相手の発言にこれで返すだけで大体それっぽく会話が繋がるウルトラボタンですね
やったぁ 全身で喜びを表したい時に使いましょう
Mu!What&amp;rsquo;s up! 途中から会話に入る時に咄嗟にボタンを押すと大体会話のコンテキストが把握できて便利ですね。
しょうがなしだなぁ… しょうがない事案が発生した時に使いましょう
最後に さなボタンだけで人間の会話を繋げることができるということがお分かり頂けたと思います。
DiscordのBotの方ですがさなボタンの更新に追従する機能だったり、Reactionが付いた時に音を出す機能などを実装していきたいと思っております。</description>
    </item>
  </channel>
</rss>