<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>遺言書</title>
    <link>https://blog.himanoa.net/</link>
    <description>Recent content on 遺言書</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
        <atom:link href="https://blog.himanoa.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>日記 2021-06-15</title>
      <link>https://blog.himanoa.net/68/</link>
      <pubDate>Wed, 16 Jun 2021 00:12:51 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/68/</guid>
      <description>ダイエット 昨日日記を書いた後散歩して、友達と通話をしながら朝を迎えた
今日は筋肉痛がひどすぎるのと徹夜なので寝る
ちゃんとしたPR ちゃんとしたPRってなんだろう。テンプレートだけではまともなPRっていうのはわからないので、OSSのPR一日一個を読むみたいなのをやってみたら言語化できるんじゃないか？という仮説をたてた
明日からやっていきたいがそこまでの余力があるのか果たして…
労働 無限に一つのコンポーネントのバグを取っていた。とりあえず手を入れてたコンポーネント自体はできたので繋ぎ込んで終わり
React How to support strict effects · Discussion #18 · reactwg/react-18
Automatic batching for fewer renders in React 18 · Discussion #21 · reactwg/react-18
New feature: startTransition · Discussion #41 · reactwg/react-18
あたりをさらっと読んだ。
startTransition に関しては業務で使ったら若干便利そうなところをあるので導入したさがある。
ただ Concurrent modeをoptinするのかどうかの議論は必要そうだなーって感じ
useEffect の周りの話は最初見た時は使ってる箇所とマイグレーション方法的を考えた時に手間がやばいな…っておもったが、
import { useEffect, useRef } from &amp;#39;react&amp;#39; type OnUnmounted = () =&amp;gt; void | void type UseWillBeMounted = (effect: () =&amp;gt; OnUnmounted) =&amp;gt; void export const useWillBeMounted: UseWillBeMounted = (effect) =&amp;gt; { const effectRef = useRef&amp;lt;boolean&amp;gt;(false) useEffect(() =&amp;gt; { if(effectRef.</description>
    </item><item>
      <title>日記 2021-06-14</title>
      <link>https://blog.himanoa.net/67/</link>
      <pubDate>Tue, 15 Jun 2021 00:58:38 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/67/</guid>
      <description>ダイエット なんか気づいたら太ってたのでダイエットしようとおもう。食生活も直したいけどそれどころではないので一旦運動からやろうかなと
この日記を書き終わったら、散歩してくる予定
他人の書いたコード 他人の書いたコードを読むことはできるが、他人の書いたコードに自分の書いたコードを足すのがとてもダルいとおもっていることがわかってきた。
予防線を貼るが特定個人のコードがだるいとかいう話ではなく、自分の性格的な話です
で、これを拗せると他人の書いたコードに最小の変更で、機能を追加するということができず、結局全部書き直すのとおなじくらいのdiff量になってしまう という問題に直面する。
「ダーティなコードを書く選択も取らずに甘えたこと言ってるんじゃねえ」って言われたらそれはそう…って感じになるので、ある程度こういう手が取れるようになりたいよなあって思った
ダーティなコードを書きたくない理由はあって、基本的にダーティなコードを書いて何か問題が発生して困るのは自分 なので 問題が発生した時に切り分けと修正がしやすいような構成で自分のコミットをデプロイしたい。すなわち、要件に対して自分が適切だと思えるコードに書き直したい というのが理由。
正直チーム開発に向いてないなあって最近思った
はやく石になりたい
あと外部ライブラリ、大体仕事の邪魔
会社 チームでコード書くのだるいな…とかいう話をした後にこれを書くのも信憑性を疑われそうなのですが、会社については神だとおもってます。
単順に会社の人達おもしろいし仕事が正確で、仕事してて大変快適で最高です。
次回の出社日とか楽しみ
今日みた配信 ピアノの音楽に綺麗な歌声が重なると泣きそうになる。多分疲れてるんだなあ
TypeScript UnionType とか割と都合がいい機能が揃ってて仕事で使うにはかなり便利なんですが、例外はどんなにがんばろうとanyゲーミングになって安全もクソもないので使用を強要された時以外使いたくないなあとおもいはじめた。
Reactつかえて例外周りがまともなプログラミング言語っていうのも思い付かないしどうしようかなあってなってる。ReasonMLとかどうなんだろう
WSL2 土曜にぶっ壊して sudo の user password すら通らなくなったので、コードとconfigのバックアップだけとって、ArchWSLの再インストールをした
.config/ を展開 direnv と asdf と neovim とRustのtoolchain入れたら開発できるくらいには回復したので、環境構築楽でいいなあとおもった
asciidoctor 生成されるhtmlに不満があるので、はやく自作してるAsciidoc parserベースにして作り直したい。FF14の固定活動とかもあって全然作業できなくて自分が二人ほしいですね</description>
    </item><item>
      <title>ブログのURL構造を変更した</title>
      <link>https://blog.himanoa.net/65/</link>
      <pubDate>Sat, 06 Feb 2021 09:12:08 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/65/</guid>
      <description>hugoのversionを上げたら blog.himanoa.net が entries/って記事を表示しはじめて壊れてしまっていたので、content配下のディレクトリ構造を変更した。
しかし、content以下のディレクトリ構造を変えるとビルドした後の記事のURLも変わってしまう。
URLが変わってしまうと、過去のリンクが壊れてしまってつらいつらいなので、過去のURLを踏んできたときは今のURLにリダイレクトするようにした。
ここではその作業ログを残す
Hugoでのリダイレクトの貼り方 hugoにはFront Matterという仕組みが存在し、ここに決められた形式のメタデータを書くことができる。
ここにリダイレクト元となるパスを記述することでリダイレクトを実現することができる。
詳細は公式ドキュメントを参照するべし
作業手順 content/entries以下のファイルをcontent/に移動 15a468c
既存の記事内のFront Matterの形式を揃える
hugo convert toJSON --unsafe を実行することでcontent配下のFront matterを一括変換できる cf5bfc5
記事ファイルの内部を開いてFront Matter部分だけ抜き出して置換するJavaScriptを書いて実行する c5a942b
コードはこちら
git push してデプロイされたら動作確認する</description>
    </item><item>
      <title>Blogをasciidocで書いてみた</title>
      <link>https://blog.himanoa.net/64/</link>
      <pubDate>Sat, 06 Feb 2021 07:31:26 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/64/</guid>
      <description>Hugoはasciidocもサポートしてるみたいで、表現力が微妙に足りないmarkdownじゃなくてasciidocを試験的に使ってみるテスト
めっっちゃ話は飛ぶんですが、下の画像はエデン共鳴ノーマルのクリア記念撮影のスクショです。どうでもいいですね</description>
    </item><item>
      <title>パスタのゆでかた</title>
      <link>https://blog.himanoa.net/63/</link>
      <pubDate>Wed, 18 Nov 2020 11:55:18 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/63/</guid>
      <description>引っ越しに成功したのはいい物の諸事情により冷蔵庫が金曜日まで存在しないので、自炊ができなくて悲しい。
こういう時にパスタなどの乾燥麺が便利。
常温で放置していてもある程度日持ちして、作るのも簡単なのでね
味付けはどうしているのかというと、セブンイレブンで打ってる あえるだけのパスタソース シリーズで適当にあえているだけ。冷蔵庫がないので具はシーチキンの缶詰めとかを適当にのせて食べている
この際だし自分のやっている麺の茹で方についてのメモを残しておこうとおもう。他に書くこともないので
水を1Lをある程度深さがある鍋に入れる 塩を大さじ1 + 小さじ2でお湯に入れて溶かす 火にかけて沸騰するまで待つ 麺を一人前沸騰したお湯に入れる(最初は全部お湯に浸らないが、お湯に浸ってる側が柔らかくなるのでそのうち全部入るようになる) 麺を適当につまみ食いしながら硬さを確認する。いい感じになったら、ざるにかけるなどしてお湯を切る 皿に盛り付けてパスタソースをあえて完成 </description>
    </item>
  </channel>
</rss>