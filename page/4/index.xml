<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>遺言書</title>
    <link>https://blog.himanoa.net/</link>
    <description>Recent content on 遺言書</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
        <atom:link href="https://blog.himanoa.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>僕が作ったツールがhomebrewから入るようになりました</title>
      <link>https://blog.himanoa.net/75/</link>
      <pubDate>Fri, 29 Oct 2021 07:28:23 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/75/</guid>
      <description>といってもcoreに入ったわけではなく、自前のtapを用意しただけです。
今のところは mkrepo と mdmg の二つが入ります
sourceからのインストールになるので brew install -s himanoa/tap/mdmg みたいな感じでインストールしてください。
LinuxBrewでは試しましたがmacOSで試してないので、macOSで試して何か問題あったら @h1manoa のほうまでお願いします</description>
    </item><item>
      <title>Markdownでrails generateみたいなのを作れるツールを作った</title>
      <link>https://blog.himanoa.net/74/</link>
      <pubDate>Wed, 27 Oct 2021 03:27:48 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/74/</guid>
      <description>開発中にアーキテクチャに乗った開発していくにつれて、テストだったり実装だったりをいつも同じような記述やディレクトリ構造に配置すること、多々あるとおもいます。
そういった時に他のファイルをコピペして開発するのだと、実装を消したりコピペ元特有の名前を置換する作業が発生して面倒です。
とくにコピペミスやディレクトリの作成ミスなどで他の部分と若干命名がずれる、みたいなのが発生すると開発体験が最悪です。
Ruby on Railsではこのような問題を rails generate でソースコードの雛形を複数ファイルをまとめて作ることによって解決しています。
この解決方法は結構開発体験がよいので、今回はどのプロジェクトでも違和感なしに rails generate を実現できるようなツール mdmg を作成しました!
インストール方法 AURやhomebrew用のあれこれをやるのが面倒だったので、もう適当です。 cargoコマンドが使える人は cargo install mdmg でインストールできます。 cargoがない人は https://github.com/himanoa/mdmg/releases/tag/v0.1.1 からお好きなプラットフォーム向けのassetsをダウンロードして、中のmdmgをパスが通ってるところに配置してください。
シンプルな使い方 プロジェクトディレクトリで mdmg setup を実行すると .mdmgディレクトリが生成されます。
mdmgコマンドは .mdmgディレクトリ内のMarkdownを基にscaffolding計画を決めるツールなので、次のようなmdmgテンプレートを .mdmg/source.md に配置しましょう
https://gist.github.com/himanoa/9b716e16fa421c523150b00114a186ed
作成したプランを基に実行するのは次のコマンドでできます!
mdmg generate source fetchGitHubToken
プランのテンプレート内の {{identify}} がfetchGitHubTokenに置換されて、h2見出しのディレクトリとファイル名にcodeblockが出力されて保存されます
また mdmg generate は -d オプションでdry-runすることができるので、テンプレートを書いてる時に有効活用すると良いでしょう
特徴 ほぼREADME.mdに書いてあることの詳細解説です
Markdownでscaffoldの計画書を記述できる rails generate では generatorを自作するためにはRubyスクリプトを書きますが、mdmgはhandlebars templateが使えるmarkdownを採用しました。
Rubyスクリプトとmarkdownでの計画書記述の優劣は次の通りです - (優) markdownはcodeblockを使えるのでGitHub上でsyntax highlightが効く - (劣) スクリプトではないので環境変数などによってファイルを作ったり作らなかったりみたいな分岐を表現できない
このmarkdownでscaffoldの計画書を記述することができる、というアイデアは https://github.com/cats-oss/scaffdog で採用されていて、とても良かったので概ねパクってきました。</description>
    </item><item>
      <title>やめたい人生2021</title>
      <link>https://blog.himanoa.net/73/</link>
      <pubDate>Wed, 06 Oct 2021 01:09:10 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/73/</guid>
      <description>部屋の片付けができない
ゴミを指定の日に出せない
床に物を置きがち
労働のパフォーマンスが不安定
総括 人生ごとやめたほうが良い</description>
    </item><item>
      <title>ゆっくりと破滅に向かう</title>
      <link>https://blog.himanoa.net/72/</link>
      <pubDate>Mon, 27 Sep 2021 09:26:07 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/72/</guid>
      <description>もしかして: 終焉のカウントダウン ?</description>
    </item><item>
      <title>連休の始まり</title>
      <link>https://blog.himanoa.net/71/</link>
      <pubDate>Sat, 21 Aug 2021 04:53:58 +0900</pubDate>
      
      <guid>https://blog.himanoa.net/71/</guid>
      <description>遅めの5連休を取ったので今日から連休スタートです。せめて連休中は毎日日記を書いていきたいところ
今日やったこと 労働
職場の人にいい感じの小さいRustツールを教えてもらったのでパッチ書いた
ゴミ捨て
オクトパストラベラー
プリムロゼの二章だけ
今日やりたいこと 生活の修復
部屋の掃除
ゴミ捨て
風呂掃除
プログラミング
旅団世界の戦闘シミュレータ
なんか良さげなOSSみつけてパッチ投げたい
その他 せっかく5連休を手に入れたのはいいですが、日程だけとりあえず抑えた感じで何も予定がないし、コロナが最強に流行ってるので旅行とかもいけないしでやること不足気味ですね。
k8sのクラスタでもVPS上に建築するって言って全く手つけてなかったのえやれるといいなーっていま思ってます
あと、風呂からブログかけたら便利だろうなとおもって、iPadからブログを書けるようにしてるんですが、意外とiPadって文字書きやすいですね。仕事で使ってるラップトップよりタイピング体験がいい気さえしています。</description>
    </item>
  </channel>
</rss>